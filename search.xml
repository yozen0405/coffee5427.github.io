<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>CSES 1654</title>
    <url>/2023/03/18/CSES1654/</url>
    <content><![CDATA[<h2 id="題目"><a href="#題目" class="headerlink" title="題目"></a><a href="https://cses.fi/problemset/task/1654/">題目</a></h2><ul>
<li>給 $n$ 個正整數，$x_1\sim x_n$，對於每個 $x_i$ 分別計算計算符合條件的 $y$ 的數量 :<ol>
<li>符合 $x_i \mid y = x_i$ 的 $y$ </li>
<li>符合 $x_i \mathrel{\&amp;} y = x_i$ 的 $y$ </li>
<li>符合 $x_i \mathrel{\&amp;} y\neq 0$ 的 $y$</li>
</ol>
</li>
</ul>
<span id="more"></span>
<h2 id="想法"><a href="#想法" class="headerlink" title="想法"></a>想法</h2><h3 id="解題"><a href="#解題" class="headerlink" title="解題"></a>解題</h3><ul>
<li>$\texttt{SOS DP}$<ul>
<li>$O(N\times 2^N)$</li>
<li>$N=\log n \approx 20$</li>
</ul>
</li>
<li>$x \mid y = x$<ul>
<li>$\texttt{subset of } x \texttt{ in } \text{set}(a_i)$</li>
</ul>
</li>
<li>$x\mathrel{\&amp;} y = x$<ul>
<li>觀察</li>
<li>$x=1101001$</li>
<li>$y=11\color{red}0\color{white}1\color{red}0\color{white}\color{red}0\color{white}1$</li>
<li>$y$ 只能在紅色的地方從 $\color{red}0\color{white}$ 變 $1$</li>
<li>那就代表說如果 $x,y$ 都 $0,1$ 顛倒那不就變 $y$ 要是 $x$ 的 $\texttt{subset}$ 了嗎</li>
<li>$(\sim x)=0010110$</li>
<li>$(\sim y)=00\color{red}1\color{white}0\color{red}1\color{white}\color{red}1\color{white}0$  </li>
<li>$y$ 只能在紅色的地方從 $\color{red}1\color{white}$ 變 $0$</li>
<li>答案為 $\texttt{subset of } (\sim x) \texttt{ in } \text{set}(\sim a_i)$</li>
</ul>
</li>
<li>$x$ &amp; $y \neq 0$<ul>
<li>$n-\texttt{subset of } (\sim x) \texttt{ in } \text{set}(a_i)$</li>
</ul>
</li>
</ul>
<h3 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h3><ul>
<li>$(\sim x)$ 不能在 $\texttt{C++}$ 直接用</li>
<li>必須先另一個夠大的數其中都是 $1$<ul>
<li>$C=\texttt{(1 &lt;&lt; 21) - 1} =\underbrace{1111…11}_{20}$</li>
</ul>
</li>
<li>$(\sim x)=(C \texttt{ xor } x) $</li>
</ul>
<h2 id="CODE"><a href="#CODE" class="headerlink" title="CODE"></a>CODE</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> pii pair<span class="string">&lt;int, int&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> mk make_pair</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> F first</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> S second</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ALL(x) x.begin(), x.end()</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">using</span> PQ = priority_queue&lt;<span class="type">int</span>, vector&lt;<span class="type">int</span>&gt;, greater&lt;<span class="type">int</span>&gt;&gt;;</span><br><span class="line"> </span><br><span class="line"><span class="type">const</span> <span class="type">int</span> INF = <span class="number">2e18</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> maxn = <span class="number">3e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> M = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> C = (<span class="number">1LL</span> &lt;&lt; <span class="number">21</span>) - <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">int</span> F[(<span class="number">1LL</span> &lt;&lt; <span class="number">21</span>) + <span class="number">2</span>], R[(<span class="number">1LL</span> &lt;&lt; <span class="number">21</span>) + <span class="number">2</span>];</span><br><span class="line"><span class="type">int</span> a[maxn];</span><br><span class="line"></span><br><span class="line"><span class="comment">// SOS DP</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">build</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) F[a[i]]++;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">21</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> mask = <span class="number">0</span>; mask &lt; (<span class="number">1</span> &lt;&lt; <span class="number">21</span>); mask++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (mask &amp; (<span class="number">1</span> &lt;&lt; i))</span><br><span class="line">                F[mask] += F[mask ^ (<span class="number">1</span> &lt;&lt; i)];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) R[C ^ a[i]]++; <span class="comment">// only here different with F</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">21</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> mask = <span class="number">0</span>; mask &lt; (<span class="number">1</span> &lt;&lt; <span class="number">21</span>); mask++) &#123; <span class="comment">// start from 0</span></span><br><span class="line">            <span class="keyword">if</span> (mask &amp; (<span class="number">1</span> &lt;&lt; i))</span><br><span class="line">                R[mask] += R[mask ^ (<span class="number">1</span> &lt;&lt; i)];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">init</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) cin &gt;&gt; a[i];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">build</span> ();</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="type">int</span> Q1 = F[a[i]];</span><br><span class="line">        <span class="type">int</span> Q2 = R[C ^ a[i]];</span><br><span class="line">        <span class="type">int</span> Q3 = n - F[C ^ a[i]];</span><br><span class="line">        cout &lt;&lt; Q1 &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; Q2 &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; Q3 &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125; </span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">// ios::sync_with_stdio(0);</span></span><br><span class="line">    <span class="comment">// cin.tie(0);</span></span><br><span class="line">    <span class="type">int</span> t = <span class="number">1</span>;</span><br><span class="line">    <span class="comment">//cin &gt;&gt; t;</span></span><br><span class="line">    <span class="keyword">while</span> (t--) &#123;</span><br><span class="line">        <span class="built_in">init</span>();</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <tags>
        <tag>CSES</tag>
        <tag>題解</tag>
      </tags>
  </entry>
  <entry>
    <title>CSES 1669</title>
    <url>/2023/03/18/CSES1669/</url>
    <content><![CDATA[<h2 id="題目"><a href="#題目" class="headerlink" title="題目"></a><a href="https://cses.fi/problemset/task/1669/">題目</a></h2><ul>
<li>無向圖輸出環</li>
</ul>
<h2 id="想法"><a href="#想法" class="headerlink" title="想法"></a>想法</h2><ul>
<li>可以隨意找一個點當 $\texttt{source}$ 來進行 $\texttt{dfs}$  <span id="more"></span></li>
<li>$\texttt{dfs}$ 如果遇到 $\texttt{back edge}$ ，就找到一個環了<ul>
<li>$\texttt{source} \rightarrow  x_1 \rightarrow  x_2 \rightarrow  …. \rightarrow  x_i \rightarrow  ….. \rightarrow   x_j \xrightarrow[\texttt{backedge}] {} x_i$</li>
</ul>
</li>
<li>$x_i \rightarrow  … \rightarrow  x_j \rightarrow  x_i$ 就是一個環</li>
<li>$\texttt{backtracking}$ 輸出</li>
</ul>
<h2 id="CODE"><a href="#CODE" class="headerlink" title="CODE"></a>CODE</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> mk make_pair</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> F first</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> S second</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"> </span><br><span class="line"><span class="type">const</span> <span class="type">int</span> INF = <span class="number">2e18</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> maxn = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="type">int</span> n, m;</span><br><span class="line">vector&lt;<span class="type">int</span>&gt; G[maxn];</span><br><span class="line"><span class="type">int</span> pre[maxn];</span><br><span class="line">vector&lt;<span class="type">int</span>&gt; ans;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span> <span class="params">(<span class="type">int</span> u, <span class="type">int</span> par)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> v : G[u]) &#123;</span><br><span class="line">        <span class="keyword">if</span> (v == par) <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">if</span> (pre[v]) &#123; <span class="comment">// if (visited[v])</span></span><br><span class="line">            ans.<span class="built_in">pb</span>(u);</span><br><span class="line">            <span class="keyword">while</span> (ans.<span class="built_in">back</span>() != v) &#123; <span class="comment">// backtracking</span></span><br><span class="line">                ans.<span class="built_in">pb</span>(pre[ans.<span class="built_in">back</span>()]);</span><br><span class="line">            &#125;</span><br><span class="line">            ans.<span class="built_in">pb</span>(u);</span><br><span class="line">            cout &lt;&lt; ans.<span class="built_in">size</span>() &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> ele : ans) cout &lt;&lt; ele &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">            <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        pre[v] = u;</span><br><span class="line">        <span class="built_in">dfs</span> (v, u);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">init</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    <span class="type">int</span> u, v;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; m; i++) &#123;</span><br><span class="line">        cin &gt;&gt; u &gt;&gt; v;</span><br><span class="line">        G[u].<span class="built_in">pb</span>(v);</span><br><span class="line">        G[v].<span class="built_in">pb</span>(u);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!pre[i]) &#123;</span><br><span class="line">            pre[i] = i;</span><br><span class="line">            <span class="built_in">dfs</span> (i, <span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;IMPOSSIBLE\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">// ios::sync_with_stdio(0);</span></span><br><span class="line">    <span class="comment">// cin.tie(0);</span></span><br><span class="line">    <span class="built_in">init</span> ();</span><br><span class="line">    <span class="built_in">solve</span> ();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <tags>
        <tag>CSES</tag>
        <tag>題解</tag>
      </tags>
  </entry>
  <entry>
    <title>中國剩餘定理 不互質</title>
    <url>/2023/03/16/CRT/</url>
    <content><![CDATA[<h2 id="題目"><a href="#題目" class="headerlink" title="題目"></a>題目</h2><ul>
<li>給你一套方程組如下，其中模數( $k_i$ )不一定互質，求出最小正整數解 $x$ ，如果沒有則輸出 $-1$</li>
</ul>
<script type="math/tex; mode=display">
\begin{cases}x\equiv p_1\pmod {k_1} \\ x\equiv p_2\pmod {k_2}\\ ......\\ x\equiv p_n\pmod {k_n}\end{cases}</script><span id="more"></span>
<h2 id="想法"><a href="#想法" class="headerlink" title="想法"></a>想法</h2><p>先以兩兩來看 <br></p>
<p><script type="math/tex">\begin{cases} x\equiv p_1\pmod {k_1} \\x\equiv p_2\pmod {k_2} \end{cases}</script>  <br></p>
<p>$\Rightarrow \begin{cases} x=k_1x_1+p_1 \tag{1} \\x=k_2x_2+p_2 \end{cases}$  <br></p>
<p>$k_1x_1+p_1=k_2x_2+p_2$  <br></p>
<p>$k_1x_1+(-k_2)x_2=p_2-p_1$  <br></p>
<p>我們下面主要要解的是 $x_1$ 所以跟 $x_2$ 係數的正負沒什麼關西，所以以下都寫正號  <br></p>
<div class="note info no-icon">
            <h3 id="貝祖定理"><a href="#貝祖定理" class="headerlink" title="貝祖定理:"></a>貝祖定理:</h3><p>在 $ax+by=m$ 中，若且唯若 $m$ 是 $a$ 及 $b$ 的最大公因數 $\gcd(a,b)$ 的倍數，有整數解  <br></p>
          </div>
<p>若 $x_1,x_2$ 有解，則整除 $\gcd(k_1,k_2) \mid p_2-p_1$ ， 如果不是的話代表無解  <br></p>
<p>令 $\gcd(k_1,k_2)=d$，與 $p_2 - p_1 = c$  <br></p>
<p>$\Rightarrow \frac{k_1}{d} \times x_1 + \frac{k_2}{d} \times x_2 = \frac{c}{d} \tag{2}$  <br></p>
<p>其中 $\frac{k_1}{d}$ 與 $\frac{k_2}{d}$ 互質  <br></p>
<div class="note info no-icon">
            <h3 id="模逆元移向證明"><a href="#模逆元移向證明" class="headerlink" title="模逆元移向證明:"></a>模逆元移向證明:</h3><p>$a \times b \equiv c \pmod{m}$  <br><br>兩邊同乘 $b^{-1} \Rightarrow a \times (b \times b^{-1}) \equiv c \times b ^{-1} \pmod{m}$  <br><br>$a \equiv c \times b^{-1} \pmod{m}$  <br></p>
          </div>
<p>設 $x^\prime_1$ 為 $\frac{k_1}{d} \times x_1 + \frac{k_2}{d} \times x_2 = 1$ 的解則， $x^\prime_1 \equiv (\frac{k_1}{d})^{-1} \pmod{\frac{k_2}{d}}$ ，這個可以用 extgcd 算出來  <br><br>故 $(2)$ 式中 $x_1$ 的解可為 $ansx_1 \equiv \frac{c}{d} \times(\frac{k_1}{d})^{-1} \pmod{\frac{k_2}{d}}$ ( $ansx_1$ 是 $(2)$ 式中 $x_1$ 的解)代回 $(1)$  <br></p>
<p>$X=k_1 \times ansx_1 + p_1$  <br><br>$\Rightarrow X=k_1[\frac{c}{d} \times(\frac{k_1}{d})^{-1}+tmp\times \frac{k_2}{d}]+p_1$  <br><br>$\Rightarrow X =k_1\times \frac{c}{d} \times(\frac{k_1}{d})^{-1}+tmp\times \frac{k_1 k_2}{d}+p_1$  <br><br>而新的同餘式就是  <br><br>$\Rightarrow x \equiv k_1\times\frac{c}{d}\times(\frac{k_1}{d})^{-1}+ p_1 \pmod{\frac{k_1 k_2}{d}}$   <br><br>即可表達為 $x \equiv k_1\times ansx_1 + p_1\pmod{\frac{k_1 k_2}{d}}$   <br><br>又 $k_1 k_2 = \gcd(k_1,k_2) \times \text{lcm}(k_1,k_2)$ $\Rightarrow \frac{k_1 k_2}{d}= lcm$  <br><br>故若得前 $i-1$ 個式子合併得到 $x \equiv X \pmod{lcm}$  <br><br>而與第 $i$ 式合併為 $x=ansx_i\times lcm+X \pmod{\frac{lcm\times k_i}{d}}$  <br></p>
<p>以上面來的 $x=k_1x_1+p_1$ 說，目前的 $k_1=lcm,p_1=X,x_1=ansx_1=ansx_i目前要求的$  <br></p>
<div class="note info no-icon">
            <h3 id="輾轉相除法"><a href="#輾轉相除法" class="headerlink" title="輾轉相除法:  "></a>輾轉相除法:  <br></h3><p>$\gcd(a,b)=gcd(b,b \% a)$  <br><br>令 $d=\gcd(a,b),a=nd,b=md$  <br><br>一直互相相減之後就會得到 $d$  <br><br><a href="https://hackmd.io/@Koios/rJ_lER719">https://hackmd.io/@Koios/rJ_lER719</a>  <br></p>
          </div>
<div class="note info no-icon">
            <h3 id="證明-為什麼除以一個數取模等於乘以這個數的模逆元"><a href="#證明-為什麼除以一個數取模等於乘以這個數的模逆元" class="headerlink" title="證明: 為什麼除以一個數取模等於乘以這個數的模逆元   "></a>證明: 為什麼除以一個數取模等於乘以這個數的模逆元   <br></h3><p><a href="https://cdn.discordapp.com/attachments/972879937180692551/990257847252160572/unknown.png">證明圖片</a>  <br></p>
          </div>
<div class="note info no-icon">
            <h3 id="擴展歐里基德推導"><a href="#擴展歐里基德推導" class="headerlink" title="擴展歐里基德推導:  "></a>擴展歐里基德推導:  <br></h3><p>$ax+by=\gcd(a,b)$  <br><br>$bx_1+(a \% b)y_1=\gcd(a,b)$  <br><br>$\Rightarrow ax+by=bx_1+(a-b\times \lfloor{\frac{a}{b}} \rfloor) y_1$  <br><br>整理右式 $\Rightarrow ax+by=ay_1+b(x_1 - \lfloor{\frac{a}{b}} \rfloor y_1)$  <br><br>推得轉移式 $x=y_1,y=x_1 - \lfloor{\frac{a}{b}} \rfloor y_1$  <br></p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function">pii <span class="title">ex_gcd</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (b == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> &#123;<span class="number">1</span>, <span class="number">0</span>&#125;;</span><br><span class="line">    &#125;</span><br><span class="line">    pii p = <span class="built_in">ex_gcd</span>(b, a%b);</span><br><span class="line">    <span class="type">int</span> x = p.second;</span><br><span class="line">    <span class="type">int</span> y = p.first - p.second*(a/b);</span><br><span class="line">    <span class="keyword">return</span> &#123;x,y&#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
          </div>
<h2 id="實作"><a href="#實作" class="headerlink" title="實作"></a>實作</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span> </span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> pii pair<span class="string">&lt;int,int&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> p[<span class="number">1001</span>], k[<span class="number">1001</span>]; </span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"></span><br><span class="line"><span class="function">pii <span class="title">ex_gcd</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (b == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> &#123;<span class="number">1</span>, <span class="number">0</span>&#125;;</span><br><span class="line">    &#125;</span><br><span class="line">    pii p = <span class="built_in">ex_gcd</span>(b, a%b);</span><br><span class="line">    <span class="type">int</span> x = p.second;</span><br><span class="line">    <span class="type">int</span> y = p.first - p.second*(a/b);</span><br><span class="line">    <span class="keyword">return</span> &#123;x,y&#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">china</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> X = p[<span class="number">1</span>];</span><br><span class="line">    <span class="type">int</span> lcm = k[<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    x ≡ p1(mod k1)</span></span><br><span class="line"><span class="comment">    x ≡ p2(mod k2)</span></span><br><span class="line"><span class="comment">    x = x1 * k1 + p1</span></span><br><span class="line"><span class="comment">    x = x2 * k2 + p2</span></span><br><span class="line"><span class="comment">    x1 * k1 - x2 * k2 = p2 - p1</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="comment">// 可以假設 k1 是已經有的</span></span><br><span class="line">    <span class="comment">// k2 是現在要算的</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        <span class="type">int</span> c = p[i] - X; <span class="comment">// p2-p1</span></span><br><span class="line">        <span class="type">int</span> d = __gcd(k[i], lcm); <span class="comment">//k1*k2</span></span><br><span class="line">        <span class="keyword">if</span> (c % d != <span class="number">0</span>) <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">auto</span> [x,y] = <span class="built_in">ex_gcd</span>(lcm/d, k[i]/d); </span><br><span class="line">        <span class="comment">// (lcm/d)*(x1) + (k2/d)*(x2) = 1</span></span><br><span class="line">        x = (c) / d * x % (k[i] / d);</span><br><span class="line">        <span class="comment">// 因為是模逆元, 被 模過 k[i]*d 下, 要是又超過了就要在模一次</span></span><br><span class="line">        X += lcm*x; <span class="comment">// X 每次都要更新</span></span><br><span class="line">        lcm = lcm / d * k[i]; <span class="comment">// lcm 每次都要更新</span></span><br><span class="line">        <span class="comment">// x ≡ X (mod lcm)</span></span><br><span class="line">        X %= lcm;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> (X &gt; <span class="number">0</span>) ? X  : X + lcm;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(cin &gt;&gt; n) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">            cin &gt;&gt; k[i] &gt;&gt; p[i];</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; <span class="built_in">china</span>() &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">        </span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>credit :  </p>
<ul>
<li><a href="https://blog.csdn.net/weixin_43602607/article/details/108270977?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522165719694016781685328819%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=165719694016781685328819&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~blog~sobaiduend~default-3-108270977-null-null.185%5Ev2%5Econtrol&amp;utm_term=%E4%B8%AD%E5%9B%BD%E5%89%A9%E4%BD%99%E5%AE%9A%E7%90%86%20%E4%B8%8D%E4%BA%92%E8%B4%A8&amp;spm=1018.2226.3001.4450">資料1</a></li>
<li><a href="https://img-blog.csdnimg.cn/20191006130325870.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0MyMDIwMzE0Mw==,size_16,color_FFFFFF,t_70">資料2</a></li>
</ul>
<h2 id="互質"><a href="#互質" class="headerlink" title="互質"></a>互質</h2><p>$\begin{cases}<br>x\equiv p_1\pmod {k_1} \\<br>x\equiv p_2\pmod {k_2} \\<br>\cdots \\<br>x\equiv p_k\pmod {k_n}<br>\end{cases}$</p>
<ul>
<li>$M = k_1 \times k_2 \times\dots\times k_n$</li>
<li>$M_i = \frac{M}{k_i}$</li>
<li>$t_i \equiv M_i^{-1} \pmod {k_i}$</li>
<li>$X = p_1t_1M_1 + p_2t_2M_2 + \dots +p_nt_nM_n$</li>
<li>$x=X \pmod{M}$</li>
</ul>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">china</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> M = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) M *= k[i];</span><br><span class="line">    <span class="type">int</span> ret = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        <span class="type">int</span> Mi = M / k[i];</span><br><span class="line">        <span class="keyword">auto</span> [t, y] = <span class="built_in">ex_gcd</span>(Mi, k[i]);</span><br><span class="line">        ret = (ret + p[i]*Mi*t) % M;</span><br><span class="line">        <span class="comment">// 最後要去在 1 ~ M 的解, 所以要 mod M</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> (ret + M) % M;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <tags>
        <tag>整理</tag>
      </tags>
  </entry>
  <entry>
    <title>CSES 1678</title>
    <url>/2023/03/17/CSES1678/</url>
    <content><![CDATA[<h2 id="題意"><a href="#題意" class="headerlink" title="題意"></a><a href="https://cses.fi/problemset/task/1678">題意</a></h2><ul>
<li>有向圖輸出環</li>
</ul>
<h2 id="想法"><a href="#想法" class="headerlink" title="想法"></a>想法</h2><ul>
<li><p>我們想把這張圖變成一張頂環樹</p>
<ul>
<li>頂環樹找 $\texttt{cycle}$ 只需要用 $\texttt{topo sort}$ 把  $\texttt{in degree}=0$ 的點刪掉讓圖上只剩環即可</li>
</ul>
</li>
</ul>
<span id="more"></span>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="built_in">topo</span> (); <span class="comment">// 進行 topo sort</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">    <span class="keyword">if</span> (out[i] &gt;= <span class="number">1</span> &amp;&amp; in[i] &gt;= <span class="number">1</span>) &#123; <span class="comment">// 環上的點的 in 跟 out 都會被保留</span></span><br><span class="line">        tmp = i;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">auto</span> v : H[i]) &#123;</span><br><span class="line">            <span class="keyword">if</span> (out[v] &gt;= <span class="number">1</span> &amp;&amp; in[v] &gt;= <span class="number">1</span>) &#123; <span class="comment">// 環上的點的 in 跟 out 都會被保留</span></span><br><span class="line">                F[i].<span class="built_in">pb</span>(v);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="https://user-images.githubusercontent.com/71330526/204506183-b92d0490-06ce-4b5b-a2cc-33246ed2ffb2.png" alt="頂環樹"></p>
<div class="note info no-icon">
            <p>頂環樹 $\texttt{:}$</p><ul><li>圖上只有一個環</li><li>每個 $\texttt{node}$ 的 $\texttt{out degree}$ 都是 $1$<ul><li>所以可以一直走，不可能會有一個結尾的點，也就代表有一個環</li><li>若有結尾的點代表該點 $\texttt{out degree}$ 是 $0$ ， 矛盾</li></ul></li><li>所有 $\texttt{outdegree}$ 是 $0$ 的點一直移除(像是在做 $\texttt{topo sort}$ ) 做完之後，所有人的 $\texttt{outdegree}$ 都至少 $1$ </li><li>對於每個剩下的點，把指出去的邊 ( $\texttt{out-going edge}$ ) 只保留一條 </li></ul>
          </div>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">del</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">    queue&lt;<span class="type">int</span>&gt; q;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (out[i] == <span class="number">0</span>) q.<span class="built_in">push</span>(i);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">while</span> (q.<span class="built_in">size</span>()) &#123;</span><br><span class="line">        <span class="type">int</span> u = q.<span class="built_in">front</span>();</span><br><span class="line">        q.<span class="built_in">pop</span>();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">auto</span> v : R[u]) &#123;</span><br><span class="line">            out[v]--;</span><br><span class="line">            <span class="keyword">if</span> (out[v] == <span class="number">0</span>) &#123;</span><br><span class="line">                q.<span class="built_in">push</span>(v);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (out[i] &gt;= <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">auto</span> v : G[i]) &#123;</span><br><span class="line">                <span class="keyword">if</span> (out[v] &gt;= <span class="number">1</span>) &#123;</span><br><span class="line">                    H[i].<span class="built_in">pb</span>(v);</span><br><span class="line">                    in[v]++;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>讓每個人的 $\texttt{out degree}$ 都恰好是 $1$ 就變成頂環樹了 </li>
</ul>
<h2 id="CODE"><a href="#CODE" class="headerlink" title="CODE"></a>CODE</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> mk make_pair</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> F first</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> S second</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"> </span><br><span class="line"><span class="type">const</span> <span class="type">int</span> INF = <span class="number">2e18</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> maxn = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="type">int</span> n, m;</span><br><span class="line">vector&lt;<span class="type">int</span>&gt; G[maxn], R[maxn], H[maxn], F[maxn];</span><br><span class="line"><span class="type">int</span> out[maxn], in[maxn], vis[maxn];</span><br><span class="line">vector&lt;<span class="type">int</span>&gt; ans;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">init</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    <span class="type">int</span> u, v;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; m; i++) &#123;</span><br><span class="line">        cin &gt;&gt; u &gt;&gt; v;</span><br><span class="line">        G[u].<span class="built_in">pb</span>(v);</span><br><span class="line">        R[v].<span class="built_in">pb</span>(u);</span><br><span class="line">        out[u]++;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">del</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">    queue&lt;<span class="type">int</span>&gt; q;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (out[i] == <span class="number">0</span>) q.<span class="built_in">push</span>(i);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">while</span> (q.<span class="built_in">size</span>()) &#123;</span><br><span class="line">        <span class="type">int</span> u = q.<span class="built_in">front</span>();</span><br><span class="line">        q.<span class="built_in">pop</span>();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">auto</span> v : R[u]) &#123;</span><br><span class="line">            out[v]--;</span><br><span class="line">            <span class="keyword">if</span> (out[v] == <span class="number">0</span>) &#123;</span><br><span class="line">                q.<span class="built_in">push</span>(v);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">topo</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">    queue&lt;<span class="type">int</span>&gt; q;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (in[i] == <span class="number">0</span> &amp;&amp; out[i] &gt;= <span class="number">1</span>) q.<span class="built_in">push</span>(i);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">while</span> (q.<span class="built_in">size</span>()) &#123;</span><br><span class="line">        <span class="type">int</span> u = q.<span class="built_in">front</span>();</span><br><span class="line">        q.<span class="built_in">pop</span>();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">auto</span> v : H[u]) &#123;</span><br><span class="line">            in[v]--;</span><br><span class="line">            <span class="keyword">if</span> (in[v] == <span class="number">0</span>) &#123;</span><br><span class="line">                q.<span class="built_in">push</span>(v);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span> <span class="params">(<span class="type">int</span> u)</span> </span>&#123; <span class="comment">// print cycle</span></span><br><span class="line">    ans.<span class="built_in">pb</span>(u);</span><br><span class="line">    <span class="keyword">if</span> (vis[u]) &#123;</span><br><span class="line">        cout &lt;&lt; ans.<span class="built_in">size</span>() &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">auto</span> ele : ans) cout &lt;&lt; ele &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    vis[u] = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> v : F[u]) &#123;</span><br><span class="line">        <span class="built_in">dfs</span> (v);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">del</span>(); <span class="comment">// delete out[i] == 0</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (out[i] &gt;= <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">auto</span> v : G[i]) &#123;</span><br><span class="line">                <span class="keyword">if</span> (out[v] &gt;= <span class="number">1</span>) &#123;</span><br><span class="line">                    H[i].<span class="built_in">pb</span>(v); <span class="comment">// 頂環樹</span></span><br><span class="line">                    in[v]++;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">topo</span> (); <span class="comment">// only keep the cycle</span></span><br><span class="line">    <span class="type">int</span> tmp = <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (out[i] &gt;= <span class="number">1</span> &amp;&amp; in[i] &gt;= <span class="number">1</span>) &#123;</span><br><span class="line">            tmp = i;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">auto</span> v : H[i]) &#123;</span><br><span class="line">                <span class="keyword">if</span> (out[v] &gt;= <span class="number">1</span> &amp;&amp; in[v] &gt;= <span class="number">1</span>) &#123;</span><br><span class="line">                    F[i].<span class="built_in">pb</span>(v); <span class="comment">// only cycle graph</span></span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (~tmp) <span class="built_in">dfs</span> (tmp);</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;IMPOSSIBLE\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="number">0</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="built_in">init</span> ();</span><br><span class="line">    <span class="built_in">solve</span> ();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <tags>
        <tag>CSES</tag>
        <tag>題解</tag>
      </tags>
  </entry>
  <entry>
    <title>MST</title>
    <url>/2023/03/27/MST/</url>
    <content><![CDATA[<h2 id="算法概要"><a href="#算法概要" class="headerlink" title="算法概要"></a>算法概要</h2><ul>
<li>對於每個 node 周圍最小 edge 一定會再 MST 內</li>
<li>Kruskal<ul>
<li>每次選 <strong>整張圖</strong> 最小權的邊</li>
</ul>
</li>
<li>Prim<ul>
<li>去選從<strong>起點</strong>擴張出來的集合<strong>周圍的</strong>最小邊</li>
</ul>
</li>
<li>Boruvka<ul>
<li>對於<strong>目前選到</strong>的每個集合，選他<strong>周圍的</strong>最小邊<span id="more"></span></li>
<li>對於這種邊數很多，但是很多邊用不到的東西 </li>
<li>Boruvka 比較容易快速省略掉不需要的邊（只找需要的出來）</li>
</ul>
</li>
</ul>
<h3 id="習題"><a href="#習題" class="headerlink" title="習題"></a>習題</h3><div class="table-container">
<table>
<thead>
<tr>
<th>題目</th>
<th>備註</th>
</tr>
</thead>
<tbody>
<tr>
<td><a href="https://tioj.ck.tp.edu.tw/problems/1795">https://tioj.ck.tp.edu.tw/problems/1795</a></td>
<td><li>kruskal<br><li>最大 MST &amp; 最小 MST 應用</td>
</tr>
<tr>
<td><a href="https://codeforces.com/problemset/problem/1468/J">https://codeforces.com/problemset/problem/1468/J</a></td>
<td><li>kruskal<br><li><a href="https://blog.csdn.net/weixin_51797626/article/details/124066368?spm=1001.2101.3001.6650.1&amp;utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7ERate-1-124066368-blog-113801758.topnsimilarv1&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7ERate-1-124066368-blog-113801758.topnsimilarv1&amp;utm_relevant_index=2">題解</a></td>
</tr>
<tr>
<td><a href="https://codeforces.com/problemset/problem/1095/F">https://codeforces.com/problemset/problem/1095/F</a></td>
<td><li>kruskal<br><li>貪心<br><li>$\text{edge}_w=a_x+a_y \text{ or } w$</td>
</tr>
<tr>
<td><a href="https://codeforces.com/group/GG44hyrVLY/contest/297533/problem/E">0x01 2020 花中一模 pE</a></td>
<td><li>Boruvka<br><li>$\text{edge}_w=a_x+a_y \text{ or } w$</td>
</tr>
<tr>
<td><a href="https://codeforces.com/contest/1513/problem/D">https://codeforces.com/contest/1513/problem/D</a></td>
<td><li>kruskal 過程想法<br><li><a href="http://codepad.org/UTaMikoD">code</a></td>
</tr>
<tr>
<td><a href="https://atcoder.jp/contests/abc282/tasks/abc282_e">https://atcoder.jp/contests/abc282/tasks/abc282_e</a></td>
<td><li>kruskal<br><li>將題目轉換成 MST 問題</td>
</tr>
<tr>
<td><a href="https://tioj.ck.tp.edu.tw/problems/2164">https://tioj.ck.tp.edu.tw/problems/2164</a></td>
<td><li>prim<br><li>曼哈頓路徑</td>
</tr>
</tbody>
</table>
</div>
<h2 id="超級原點"><a href="#超級原點" class="headerlink" title="超級原點"></a>超級原點</h2><ul>
<li><a href="https://codeforces.com/problemset/problem/1245/D">https://codeforces.com/problemset/problem/1245/D</a></li>
</ul>
<h2 id="K-度限制生成树"><a href="#K-度限制生成树" class="headerlink" title="K 度限制生成树"></a>K 度限制生成树</h2><ul>
<li><a href="https://codeforces.com/problemset/problem/125/E">https://codeforces.com/problemset/problem/125/E</a></li>
<li>$\texttt{Aliens}$ 優化</li>
</ul>
<p><img src="https://i.imgur.com/Y1gJe8e.png" style="zoom: 50%;" /></p>
<h2 id="補圖技巧"><a href="#補圖技巧" class="headerlink" title="補圖技巧"></a>補圖技巧</h2><ul>
<li>一般題目都會上限 $m=\text{min}(2\times 10^5, \frac{n\times (n-1)}{2})$, 其中 $m$ 代表 $(u,v)$ 沒有邊的數量</li>
<li>維護一個還沒分到組的 <code>set</code> ,分到組時把他從 <code>set</code> 刪掉</li>
</ul>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> u)</span></span>&#123;</span><br><span class="line">    vis[u] = <span class="number">1</span>;</span><br><span class="line">    st.<span class="built_in">erase</span>(u);</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; ret;</span><br><span class="line">    <span class="comment">// v 還沒加進集合的</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> v : st) &#123; <span class="comment">// 沒出現 -&gt; 有邊</span></span><br><span class="line">        <span class="keyword">if</span>(!G[u].<span class="built_in">count</span>(v)) ret.<span class="built_in">vush_back</span>(v);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> ele : ret)&#123;</span><br><span class="line">        st.<span class="built_in">erase</span>(ele);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> ele : ret)&#123;</span><br><span class="line">        vis[ele]=<span class="number">1</span>;</span><br><span class="line">        <span class="built_in">dfs</span>(ele);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li><a href="https://codeforces.com/problemset/problem/920/E">https://codeforces.com/problemset/problem/920/E</a></li>
<li><a href="https://codeforces.com/problemset/problem/1242/B">https://codeforces.com/problemset/problem/1242/B</a></li>
</ul>
<h2 id="衝突邊技巧"><a href="#衝突邊技巧" class="headerlink" title="衝突邊技巧"></a>衝突邊技巧</h2><ul>
<li>判斷 MST 是否唯一</li>
<li>如果並非唯一, 代表它可以被相同權重的邊給替換</li>
<li>$\Rightarrow$ 對於相同的邊一起去跑</li>
</ul>
<div class='spoiler collapsed'>
    <div class='spoiler-title'>
        範例圖
    </div>
    <div class='spoiler-content'>
        <p><img src="https://i.imgur.com/ie8AaZS.png" style="zoom: 50%;" /></p>

    </div>
</div>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) par[i] = i;</span><br><span class="line">    <span class="built_in">sort</span>(E.<span class="built_in">begin</span>(), E.<span class="built_in">end</span>(), [](Edge a, Edge b) &#123; <span class="keyword">return</span> a.w &lt; b.w; &#125;);</span><br><span class="line">    <span class="type">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; m;) &#123;</span><br><span class="line">        <span class="type">int</span> r = i;</span><br><span class="line">        <span class="keyword">while</span> (E[i].w == E[r + <span class="number">1</span>].w) r++; <span class="comment">//[i, r]</span></span><br><span class="line">        <span class="comment">// 判斷有多少合法邊</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = i; j &lt;= r; j++) &#123;</span><br><span class="line">            <span class="type">int</span> x = <span class="built_in">find</span>(E[j].u), y = <span class="built_in">find</span>(E[j].v);</span><br><span class="line">            <span class="keyword">if</span> (x == y) <span class="keyword">continue</span>;</span><br><span class="line">            <span class="comment">// 是 MST 有可能選到的</span></span><br><span class="line">            cnt++; </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 判斷真正的唯一方案數有幾個</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = i; j &lt;= r; j++) &#123;</span><br><span class="line">            <span class="type">int</span> x = <span class="built_in">find</span>(E[j].u), y = <span class="built_in">find</span>(E[j].v);</span><br><span class="line">            <span class="keyword">if</span> (x == y) <span class="keyword">continue</span>; <span class="comment">// 已經被併過了, 屬於同一方案</span></span><br><span class="line">            <span class="comment">// 再不同的集合, 唯一的方案</span></span><br><span class="line">            <span class="built_in">merge</span>(x, y), cnt--;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// ans = (合法邊) - (唯一方案數) = 其實加了是重複的方案的邊 </span></span><br><span class="line">        i = r + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; cnt &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li><a href="https://codeforces.com/contest/1108/problem/F">https://codeforces.com/contest/1108/problem/F</a></li>
<li><a href="https://codeforces.com/contest/160/problem/D">https://codeforces.com/contest/160/problem/D</a><ul>
<li>因為對於每條邊都需要看他是哪種性質</li>
<li>所以要判斷特定的邊是否是唯一的就不能只算唯一方案數了</li>
<li>必須用 BCC 去看如下</li>
</ul>
</li>
</ul>
<p><img src="https://cdn.discordapp.com/attachments/972879937180692551/1014553797806272583/858cfd42763fb554.png" alt=""></p>
<ul>
<li><a href="https://blog.csdn.net/m0_56280274/article/details/123765300?spm=1001.2101.3001.6650.1&amp;utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7EOPENSEARCH%7ERate-1-123765300-blog-101834844.topnsimilarv1&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7EOPENSEARCH%7ERate-1-123765300-blog-101834844.topnsimilarv1&amp;utm_relevant_index=2">網址</a><ul>
<li>他只是想看他是不是”對於跟他邊權一樣”的這些 edge ，唯一的 edge 而已</li>
<li>所以並不需考慮之前邊權比較小的時候留下來的邊，等同於新建一張圖</li>
</ul>
</li>
</ul>
<h2 id="維護環技巧"><a href="#維護環技巧" class="headerlink" title="維護環技巧"></a>維護環技巧</h2><ul>
<li><a href="https://codeforces.com/contest/609/problem/E">https://codeforces.com/contest/609/problem/E</a></li>
<li><a href="https://tioj.ck.tp.edu.tw/problems/1445">https://tioj.ck.tp.edu.tw/problems/1445</a></li>
<li>維護環技巧, 加入沒辦選到的, 刪掉環上除了他以外最大</li>
<li>實作, LCA, kruskal, dp 配合倍增法建表</li>
<li>次小生成樹</li>
</ul>
<h2 id="最小化最大最小差"><a href="#最小化最大最小差" class="headerlink" title="最小化最大最小差"></a>最小化最大最小差</h2><ul>
<li>找一顆生成樹滿足 有選到的 (權重最大Edge) 減掉 (權重最小Edge) 要<strong>最小</strong><ul>
<li>$\texttt{min(maxW - minW)}$</li>
</ul>
</li>
<li>有兩層最大或最小可以去枚舉內層</li>
<li>以這題來說去枚舉 $\texttt{minW}$ 對於每個 $\texttt{minW}$ 找最小的 $\texttt{maxW}$ 讓他剛好可以形成生成樹</li>
</ul>
<h3 id="N-1e3-M-1e4-C-1e9-1e9"><a href="#N-1e3-M-1e4-C-1e9-1e9" class="headerlink" title="N = 1e3, M = 1e4, C = -1e9~1e9"></a>N = 1e3, M = 1e4, C = -1e9~1e9</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sort</span> (Edges)</span><br><span class="line">    </span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= m; i++) &#123;</span><br><span class="line">    <span class="comment">// mn 為 E[i].w, mx 用 Kruskal 找</span></span><br><span class="line">    <span class="built_in">Dsu_init</span>(); <span class="comment">// O(n)</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> j = i; j &lt;= m; j++) &#123;</span><br><span class="line">        <span class="comment">// Kruskal O(m)</span></span><br><span class="line">    &#125;</span><br><span class="line">    ans = <span class="built_in">min</span> (ans, mx - mn);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// tot: O(nlgn + m^2)</span></span><br></pre></td></tr></table></figure>
<h3 id="N-2e5-M-2e5-C-100"><a href="#N-2e5-M-2e5-C-100" class="headerlink" title="N = 2e5, M = 2e5, C = 100"></a>N = 2e5, M = 2e5, C = 100</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sort</span> (Edges) <span class="comment">// &#123;w, u, v&#125;</span></span><br><span class="line">    </span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= C; i++) &#123;</span><br><span class="line">    <span class="type">int</span> idx = Edges.<span class="built_in">lower_bound</span>(&#123;i, <span class="number">0</span>, <span class="number">0</span>&#125;) - Edges.<span class="built_in">begin</span>();</span><br><span class="line">    <span class="built_in">Dsu_init</span>(); <span class="comment">// O(n)</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> j = idx; j &lt;= m; j++) &#123;</span><br><span class="line">        <span class="comment">// Kruskal O(m)</span></span><br><span class="line">    &#125;</span><br><span class="line">    ans = <span class="built_in">min</span> (ans, mx - mn);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// tot: O(nlgn + C(n + m))</span></span><br></pre></td></tr></table></figure>
<h3 id="結論"><a href="#結論" class="headerlink" title="結論"></a>結論</h3><ul>
<li>利用範圍來控制 Kruskal</li>
</ul>
<h2 id="最大化最小邊"><a href="#最大化最小邊" class="headerlink" title="最大化最小邊"></a>最大化最小邊</h2><ul>
<li><a href="https://tioj.ck.tp.edu.tw/problems/1340">https://tioj.ck.tp.edu.tw/problems/1340</a></li>
<li><a href="https://zerojudge.tw/ShowProblem?problemid=j125">https://zerojudge.tw/ShowProblem?problemid=j125</a></li>
</ul>
<h3 id="法1"><a href="#法1" class="headerlink" title="法1"></a>法1</h3><ul>
<li>從小到大枚舉($\texttt{Greedy}$)</li>
<li>$\texttt{Kruskal}$ 最大生成樹</li>
</ul>
<h3 id="法2"><a href="#法2" class="headerlink" title="法2"></a>法2</h3><ul>
<li>二分搜</li>
<li>$\texttt{DFS/BFS check}$ 只選邊權 $\le x$ 的是否能連通</li>
</ul>
<h2 id="額外練習"><a href="#額外練習" class="headerlink" title="額外練習"></a>額外練習</h2><div class="table-container">
<table>
<thead>
<tr>
<th>題目</th>
<th>備註</th>
</tr>
</thead>
<tbody>
<tr>
<td><a href="https://atcoder.jp/contests/abc210/tasks/abc210_e">https://atcoder.jp/contests/abc210/tasks/abc210_e</a></td>
<td></td>
</tr>
<tr>
<td><a href="https://atcoder.jp/contests/arc076/tasks/arc076_b">https://atcoder.jp/contests/arc076/tasks/arc076_b</a></td>
<td></td>
</tr>
<tr>
<td><a href="https://atcoder.jp/contests/abc270/tasks/abc270_f">https://atcoder.jp/contests/abc270/tasks/abc270_f</a></td>
<td></td>
</tr>
<tr>
<td><a href="https://codeforces.com/problemset/problem/1245/D">https://codeforces.com/problemset/problem/1245/D</a></td>
<td></td>
</tr>
<tr>
<td><a href="http://www.usaco.org/index.php?page=viewproblem2&amp;cpid=1138">http://www.usaco.org/index.php?page=viewproblem2&amp;cpid=1138</a></td>
<td></td>
</tr>
<tr>
<td><a href="https://judge.ioicamp.org/contests/2/problems/207">https://judge.ioicamp.org/contests/2/problems/207</a></td>
<td></td>
</tr>
</tbody>
</table>
</div>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <tags>
        <tag>MST</tag>
        <tag>algo</tag>
      </tags>
  </entry>
  <entry>
    <title>平均變異次數</title>
    <url>/2023/03/18/c893/</url>
    <content><![CDATA[<h2 id="題目"><a href="#題目" class="headerlink" title="題目"></a><a href="https://zerojudge.tw/ShowProblem?problemid=c893">題目</a></h2><ul>
<li>給 $n,k,c[1]\sim c[k]$ <ul>
<li>代表 $a$ 出現 $c[1]$ 次，$b$ 出現 $c[2]$ 次…</li>
<li>$\sum\limits_{i=1}^k c[i]=n$ </li>
<li>這些 $1\sim k$ 組成了一個長度為 $n$ 的字串</li>
</ul>
</li>
<li>問對於這些字元能組成的排列字串 $a$ ， $\sum\limits_{i=1}^{n-1}[a_i\neq a_{i+1}]$  的總和除以方法數是多少<ul>
<li>對於每種排列 $a$ 的  $\sum\limits_{i=1}^{n-1}[a_i\neq a_{i+1}]$  加起來之後再去除以「排列方法數」是多少</li>
</ul>
</li>
</ul>
<span id="more"></span>
<h2 id="想法"><a href="#想法" class="headerlink" title="想法"></a>想法</h2><ul>
<li>$ans=\frac{1}{方法數}\sum\limits_{合法\text{a}}\sum\limits_{i=1}^{n-1}[a_i\neq a_{i+1}]$</li>
<li>$ans=\sum\limits_{i=1}^{n-1}\color{aqua}{\frac{1}{方法數}\sum\limits_{合法\text{a}}[a_i\neq a_{i+1}]}$<ul>
<li>我們先只討論 $i=1$</li>
<li>淺藍色的地方就是在算平均有幾次 $[a_1\neq a_2]$</li>
<li>平均次數 $=$ 期望次數</li>
</ul>
</li>
</ul>
<div class="note info no-icon">
            <h3 id="平均值跟期望值的關西-texttt"><a href="#平均值跟期望值的關西-texttt" class="headerlink" title="平均值跟期望值的關西 $\texttt{?}$"></a>平均值跟期望值的關西 $\texttt{?}$</h3><p>骰正常的 $6$ 面骰子，骰 $6$ 次，請問能骰到的平均點數</p><p>$\begin{align} \texttt{avg}&amp;= \frac{總和}{總方法數} \\ &amp;= \frac{1+2+3+4+5+6}{6} \end{align}\tag{}$</p><p>$\begin{align}\texttt{E[X]} &amp;=機率_1\times x_1+機率_2\times x_2+…+機率_n\times x_n  \\ &amp; =\frac{1}{6}\times 1+\frac{1}{6}\times 2+\frac{1}{6}\times 3+\frac{1}{6}\times 4+\frac{1}{6}\times 5+\frac{1}{6}\times 6 \\ &amp; =  \frac{1+2+3+4+5+6}{6}\end{align}$</p><p>骰子的 $6$ 面分別為 $\{1,1,2,2,3,3\}$，骰 $6$ 次，請問能骰到的平均點數</p><p>$\begin{align} \texttt{avg}&amp;= \frac{總和}{總方法數} \\ &amp;= \frac{1+2+3+4+5+6}{6} \end{align}$</p><p>$\begin{align}\texttt{E[X]} &amp;=機率_1\times x_1+機率_2\times x_2+…+機率_n\times x_n  \\ &amp; =\frac{2}{6}\times 1+\frac{2}{6}\times 2+\frac{2}{6}\times 3 \\ &amp; =  \frac{1+1+2+2+3+3}{6} \end{align}$</p><ul><li>期望值就是把機率乘上 $\texttt{value}$ ， 平均值就是總方法數分之每次 $\texttt{value}$</li><li>機率其實就是 $\frac{出現的次數}{總方法數}$ </li><li>代表期望值可以寫成 <script type="math/tex; mode=display">\begin{align}E[x] &= \sum \frac{出現的次數\times \texttt{value}}{總方法數} \\ &=\sum \frac{\underbrace{\texttt{value}+\texttt{value}+..\texttt{value}}_{出現的次數}}{總方法數} \end{align}</script></li><li>就跟平均的一模一樣，所以<strong>平均值$=$期望值</strong></li></ul>
          </div>
<ul>
<li>回到剛剛的問題</li>
<li>平均次數 $=$ 期望次數 $=1\times P+0\times (1-P)=P$<ul>
<li>代表在這個題目機率 $P=$ 期望次數</li>
<li>所以我們下面直接用機率來算</li>
<li>其中 $P$ 為 $[a_1\neq a_2]$ 的機率</li>
<li>$P=1-P([a_1=a_2])$</li>
</ul>
</li>
<li>因為期望值可以線性疊加<ul>
<li>$E[x_1+x_2]=E[x_1]+E[x_2]$</li>
<li>全部一起算 $=$ 單獨分開算</li>
</ul>
</li>
<li>令總字數為 $m$<ul>
<li>$m=\sum\limits_{i=1}^k c[i]$</li>
</ul>
</li>
<li>$P([a_1=a_2])=\frac{c[a]}{m}\times \frac{c[a]-1}{(m-1)}+\frac{c[b]}{m}\times \frac{c[b]-1}{(m-1)}+..$</li>
<li>$\texttt{ex:aabbbcc}$<ul>
<li>$P([a_1=a_2])=\frac{2}{7}\times \frac{1}{6}+\frac{3}{7}\times \frac{2}{6}+\frac{2}{7}\times \frac{1}{6}$</li>
<li>$\texttt{a}$ 放在第一個的機率為 $\frac{2}{7}$ (因為總共 $7$ 個字母他站兩個)</li>
<li>$\texttt{a}$ 放在第一個又放在第二個的機率為 $\frac{2}{7}\times \frac{1}{6}$ (因為總共 $7$ 個字母 $\texttt{a}$ 站兩個，$\texttt{a}$ 已經放一個下去了所以剩 $1$ 個全部剩 $6$ 個)</li>
</ul>
</li>
<li>又類似抽籤跟順序無關<ul>
<li>我們放的位置 $a_i,a_{i+1}$ 也跟順序無關</li>
<li>所以任意 $a_i,a_{i+1}$ 都是一樣的，直接 $P([a_1\neq a_2])\times (n-1)$ 就是答案了 ( $n-1$ 個縫)</li>
</ul>
</li>
</ul>
<h2 id="CODE"><a href="#CODE" class="headerlink" title="CODE"></a>CODE</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> maxn = <span class="number">3e5</span> + <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n, m, k;</span><br><span class="line"><span class="type">int</span> c[maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">init</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; k;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= k; i++) &#123;</span><br><span class="line">        cin &gt;&gt; c[i];</span><br><span class="line">        m += c[i];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">double</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= k; i++) &#123;</span><br><span class="line">        ans += (<span class="type">double</span>) (c[i] * (c[i] - <span class="number">1</span>)) / ((m) * (m - <span class="number">1</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ans = (<span class="type">double</span>) (<span class="number">1</span> - ans) * (n - <span class="number">1</span>);</span><br><span class="line">    cout &lt;&lt; fixed &lt;&lt; <span class="built_in">setprecision</span> (<span class="number">3</span>) &lt;&lt; ans &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125; </span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">// ios::sync_with_stdio(0);</span></span><br><span class="line">    <span class="comment">// cin.tie(0);</span></span><br><span class="line">    <span class="type">int</span> t = <span class="number">1</span>;</span><br><span class="line">    <span class="comment">//cin &gt;&gt; t;</span></span><br><span class="line">    <span class="keyword">while</span> (t--) &#123;</span><br><span class="line">        <span class="built_in">init</span>();</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <tags>
        <tag>題解</tag>
        <tag>ZJ</tag>
      </tags>
  </entry>
  <entry>
    <title>CSES 2215</title>
    <url>/2023/03/14/CSES2215/</url>
    <content><![CDATA[<h2 id="題目"><a href="#題目" class="headerlink" title="題目"></a><a href="https://cses.fi/problemset/task/2215/">題目</a></h2><ul>
<li><p>構造一個 $1..n$ 的排列使得他的 <strong>最長單調子序列</strong> 恰好長度為 $k$</p>
</li>
<li><p><strong>最長單調子序列</strong> 是指這個子序列單調遞增或單調遞減</p>
</li>
</ul>
<span id="more"></span>
<h2 id="想法"><a href="#想法" class="headerlink" title="想法"></a>想法</h2><blockquote>
<p>$\texttt{LIS}$ 為 $\texttt{longest increasing subsequnce}$ </p>
<p>$\texttt{LDS}$ 為 $\texttt{longest decreasing subsequnce}$ </p>
</blockquote>
<h3 id="觀察"><a href="#觀察" class="headerlink" title="觀察"></a>觀察</h3><ul>
<li><p>$\texttt {ans} = \texttt{max} \begin{cases} \texttt{len(LIS)} \\ \texttt{len(LDS)}\end{cases}$</p>
</li>
<li><p>發現說要想使答案控制得很好需要使得 $\texttt{len(LIS)}$ 跟 $\texttt{len(LDS)}$ 取得平衡</p>
</li>
<li><p>例如 $n=9,k=3$ 那我必須使得 $\texttt{len(LIS) = len(LDS) = 3}$ </p>
<ul>
<li><p>使得 $\texttt{LIS}$ 和 $\texttt{LDS}$ 不互相影響</p>
</li>
<li><p>$[\underline{\color{red}3 \color{white},2,1},\underline{\color{red}6 \color{white},5,4},\underline{\color{red}9 \color{white},8,7}]$</p>
</li>
<li><p>紅色為其中一個 $\texttt{LIS}$ 底線為 $\texttt{LDS}$</p>
</li>
</ul>
</li>
</ul>
<h3 id="證明"><a href="#證明" class="headerlink" title="證明"></a>證明</h3><blockquote>
<p>$\texttt{proof:}$</p>
<p>$k &lt; \sqrt{n}$ 無解</p>
</blockquote>
<ul>
<li>假設存在一個長度 $n=k^2+1$ 的排列 $p$，它的 $\texttt{LIS}$ 與 $\texttt{LDS}$ 長度皆最多為 $k$<ul>
<li>此時 $k&lt;\sqrt{n}$</li>
</ul>
</li>
<li>$a_i=$ 以 $a_i$ 結尾的 $\texttt{LIS}$ 長度</li>
<li>$b_i=$ 以 $b_i$ 結尾的 $\texttt{LDS}$ 長度</li>
<li>對於所有 $i$ ， $1 \le a_i,b_i\le k$ (我們的假設)</li>
<li>因為 $(a_i,b_i)$ 有 $k^2$ 種可能 (籠子)</li>
<li>但目前 $i=1..k^2+1$ 有 $k^2+1$ 種 (鴿子)</li>
<li>可由鴿籠原理得知必存在兩數 $i,j$ 使 $a_i=a_j,b_i=b_j,(i&lt;j)$</li>
</ul>
<blockquote>
<p>鴿籠原理</p>
<ul>
<li>若有 $n$ 個籠子和 $n+1$ 隻鴿子，所有的鴿子都被關在鴿籠裡，那麼至少有一個籠子有至少 $2$ 隻鴿子。</li>
</ul>
</blockquote>
<ul>
<li><p>那接著分以下 $\texttt{case:}$ </p>
<ul>
<li>$\texttt{case1:}$ $p_i&lt;p_j$<ul>
<li>此時 $a_i=a_j$ 矛盾 (以 $p_i$  結尾的 $\texttt{LIS}$勢必可以再接上 $p_j$，使 $a_j=a_i+1$ )</li>
</ul>
</li>
<li>$\texttt{case2:}$ $p_i&gt;p_j$<ul>
<li>此時 $b_i=b_j$ 矛盾 (以  $p_i$  結尾的 $\texttt{LDS}$ 勢必可以再接上 $p_j$，使 $b_j=b_i+1$ ) </li>
</ul>
</li>
</ul>
</li>
<li><p>故假設錯誤，代表 $\texttt{len(LIS),len(LDS)}$ 長度會比 $k$ 大，代表 $k&lt;\sqrt{n}$ 無解</p>
</li>
</ul>
<h3 id="構造"><a href="#構造" class="headerlink" title="構造"></a>構造</h3><ul>
<li>構造方法如上面 $n=9,k=3$ 的那個方法一樣</li>
<li>分成 $n/k$ 段，每一段從大排到小，兩段之間的開頭必須是從左到右遞增</li>
<li>如果不夠讓每一段長度都是 $k$ ，那最後一段不用填滿沒關西<ul>
<li>例如 $n=8,k=3$</li>
<li>$[3,2,1,6,5,4,8,7]$ </li>
</ul>
</li>
</ul>
<h2 id="CODE"><a href="#CODE" class="headerlink" title="CODE"></a>CODE</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> pii pair<span class="string">&lt;int, int&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> mk make_pair</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> F first</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> S second</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ALL(x) x.begin(), x.end()</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">using</span> PQ = priority_queue&lt;<span class="type">int</span>, vector&lt;<span class="type">int</span>&gt;, greater&lt;<span class="type">int</span>&gt;&gt;;</span><br><span class="line"> </span><br><span class="line"><span class="type">const</span> <span class="type">int</span> INF = <span class="number">2e18</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> maxn = <span class="number">3e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> M = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n, m, k;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 向下取整</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">ifloor</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(b &lt; <span class="number">0</span>) a *= <span class="number">-1</span>, b *= <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">if</span>(a &lt; <span class="number">0</span>) <span class="keyword">return</span> (a - b + <span class="number">1</span>) / b;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> a / b;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">// 向上取整</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">iceil</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(b &lt; <span class="number">0</span>) a *= <span class="number">-1</span>, b *= <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">if</span>(a &gt; <span class="number">0</span>) <span class="keyword">return</span> (a + b - <span class="number">1</span>) / b;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> a / b;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; k;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 開根號</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">sqt</span> <span class="params">(<span class="type">int</span> x)</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> tmp = <span class="built_in">sqrt</span> (x);</span><br><span class="line">    <span class="keyword">if</span> (tmp * tmp &lt; x) tmp++;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> tmp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    m = <span class="built_in">sqt</span> (n);</span><br><span class="line">    <span class="keyword">if</span> (k &lt; m) &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;IMPOSSIBLE\n&quot;</span>;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> num = <span class="built_in">iceil</span>(n, k); <span class="comment">// 分幾段</span></span><br><span class="line">    <span class="comment">// 每一段有 k 個東西, 共 n/k 段</span></span><br><span class="line">    <span class="type">int</span> pre = <span class="number">0</span>, start = k;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; num; i++) &#123;</span><br><span class="line">        <span class="comment">// 3 2 1 6 5 4 9 8 7</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = start; j &gt; pre; j--) &#123;</span><br><span class="line">            cout &lt;&lt; j &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        pre = start;</span><br><span class="line">        start += k;</span><br><span class="line">        <span class="keyword">if</span> (start &gt; n) start = n; <span class="comment">// 太大變 n</span></span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125; </span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">// ios::sync_with_stdio(0);</span></span><br><span class="line">    <span class="comment">// cin.tie(0);</span></span><br><span class="line">    <span class="type">int</span> t = <span class="number">1</span>;</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    <span class="keyword">while</span> (t--) &#123;</span><br><span class="line">        <span class="built_in">init</span>();</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>
<h2 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h2><ul>
<li><a href="https://abc864197532.github.io/2021/09/15/cses-additional-sol/">https://abc864197532.github.io/2021/09/15/cses-additional-sol/</a></li>
</ul>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <tags>
        <tag>CSES</tag>
        <tag>題解</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello Blog</title>
    <url>/2023/03/14/default/</url>
    <content><![CDATA[<p>終於搞出自己的 $\text{Blog}$ 了，ya!</p>
<div class="note default">
            <p>default 提示</p>
          </div>
<div class="note primary">
            <p>primary 提示</p>
          </div>
<div class="note success">
            <p>success 提示</p>
          </div>
<div class="note info">
            <p>info 提示</p>
          </div>
<div class="note warning">
            <p>warning 提示</p>
          </div>
<div class="note danger">
            <p>danger 提示</p>
          </div>
<div class="note info no-icon">
            <h4 id="No-icon-note"><a href="#No-icon-note" class="headerlink" title="No icon note"></a>No icon note</h4><p>Note <strong>without</strong> icon: <code>note info no-icon</code></p>
          </div>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
  </entry>
  <entry>
    <title>hexo next 設定優化</title>
    <url>/2023/03/25/hexo%20next2/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>這是「第 2 篇 : 博客設定優化」的教學，以下是全部教學篇的總覽</p>
<div class="note info no-icon">
            <h3 id="總覽"><a href="#總覽" class="headerlink" title=" 總覽"></a><i class="fa fa-bars"></i> 總覽</h3><ul><li><a href="/2023/03/23/hexo%20next/">第 1 篇 : 架設博客</a></li><li><a href="/2023/03/25/hexo%20next2/">第 2 篇 : 博客設定優化</a></li><li><a href="/2023/03/27/hexo%20next3/">第 3 篇 : 備份原始檔到 github</a></li></ul>
          </div>
<h2 id="下載軟體"><a href="#下載軟體" class="headerlink" title="下載軟體"></a>下載軟體</h2><h2 id="Scheme-設定"><a href="#Scheme-設定" class="headerlink" title="Scheme 設定"></a>Scheme 設定</h2><p>到 <code>hexo\themes\next\_config.yml</code> 找到以下語法</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># Scheme Settings</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Schemes</span></span><br><span class="line"><span class="attr">scheme:</span> <span class="string">Muse</span></span><br><span class="line"><span class="comment">#scheme: Mist</span></span><br><span class="line"><span class="comment">#scheme: Pisces</span></span><br><span class="line"><span class="comment">#scheme: Gemini</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Dark Mode</span></span><br><span class="line"><span class="attr">darkmode:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure>
<p>將 <code>scheme: Gemini</code> 註解打掉並將 <code>scheme: Muse</code> 加上註解 <code>#</code></p>
<p>開啟黑暗模式的話就把 <code>darkmode: false</code> 改成 <code>darkmode: true</code></p>
<h2 id="頁尾設定"><a href="#頁尾設定" class="headerlink" title="頁尾設定"></a>頁尾設定</h2><h3 id="作者欄"><a href="#作者欄" class="headerlink" title="作者欄"></a>作者欄</h3><p>到 <code>hexo\config_yml</code> 找到以下代碼 :</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Site</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">Hexo</span> </span><br><span class="line"><span class="attr">subtitle:</span> <span class="string">&#x27;&#x27;</span> </span><br><span class="line"><span class="attr">description:</span> <span class="string">&#x27;&#x27;</span> </span><br><span class="line"><span class="attr">keywords:</span> </span><br><span class="line"><span class="attr">author:</span> <span class="string">John</span> <span class="string">Doe</span> </span><br><span class="line"><span class="attr">language:</span> <span class="string">en</span> </span><br><span class="line"><span class="attr">timezone:</span> <span class="string">&#x27;&#x27;</span> </span><br></pre></td></tr></table></figure>
<p>將 author 改成你的名字</p>
<p><img src="https://i.imgur.com/8VpYBcu.png" alt="成果"></p>
<h3 id="去除強力驅動"><a href="#去除強力驅動" class="headerlink" title="去除強力驅動"></a>去除強力驅動</h3><p>到 <code>hexo\themes\next\layout\_partials\footer.swig</code> 找到以下代碼 :</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&#123;% if theme.footer.powered %&#125;</span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;powered-by&quot;</span>&gt;</span>&#123;#</span><br><span class="line">  #&#125;&#123;&#123; __(&#x27;footer.powered&#x27;, &#x27;<span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;theme-link&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://hexo.io&quot;</span>&gt;</span>Hexo<span class="tag">&lt;/<span class="name">a</span>&gt;</span>&#x27;) &#125;&#125;&#123;#</span><br><span class="line">#&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure>
<p>直接把上面所展示的代碼全部刪掉就可以了</p>
<h2 id="圖片點擊放大插件"><a href="#圖片點擊放大插件" class="headerlink" title="圖片點擊放大插件"></a>圖片點擊放大插件</h2><p>到 <code>hexo\themes\next\source\lib</code> 開啟 cmd </p>
<p>輸入以下指令</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/theme<span class="literal">-next</span>/theme<span class="literal">-next-fancybox3</span> fancybox</span><br></pre></td></tr></table></figure>
<p>到 <code>hexo\themes\next\_config.yml</code> 找到以下代碼 :</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># FancyBox is a tool that offers a nice and elegant way to add zooming functionality for images.</span></span><br><span class="line"><span class="comment"># For more information: https://fancyapps.com/fancybox</span></span><br><span class="line"><span class="attr">fancybox:</span> </span><br></pre></td></tr></table></figure>
<p>更改為 <code>fancybox: true</code> ，重新 <code>hexo clean</code>, <code>hexo s</code> 就可以了</p>
<h3 id="圖片太透明"><a href="#圖片太透明" class="headerlink" title="圖片太透明"></a>圖片太透明</h3><p>到 <code>hexo\themes\next\source\css\_colors.styl</code> 找到以下代碼 </p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">img</span> &#123;</span><br><span class="line">    <span class="attribute">opacity</span>: .<span class="number">75</span>;</span><br><span class="line"></span><br><span class="line">    &amp;<span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">        <span class="attribute">opacity</span>: .<span class="number">9</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="https://i.imgur.com/WkCVonn.png" alt="將反白代碼全部刪掉" style="zoom:50%;" /></p>
<p>將反白代碼全部刪掉就好</p>
<h2 id="主選單設置"><a href="#主選單設置" class="headerlink" title="主選單設置"></a>主選單設置</h2><p><img src="https://i.imgur.com/ohpaBfP.png" alt="Next 主選單設置" style="zoom:70%;" /></p>
<h3 id="新增自訂頁面"><a href="#新增自訂頁面" class="headerlink" title="新增自訂頁面"></a>新增自訂頁面</h3><p>在根目錄 (<code>hexo</code> 資料夾) 打上以下指令</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">hexo new page <span class="string">&quot;頁面名稱（網址用）&quot;</span></span><br></pre></td></tr></table></figure>
<p>例如我就新增了</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">hexo new page about</span><br></pre></td></tr></table></figure>
<h3 id="存放位置與頁面資訊"><a href="#存放位置與頁面資訊" class="headerlink" title="存放位置與頁面資訊"></a>存放位置與頁面資訊</h3><p>有別於文章與草稿有各自不同的目錄存放，<strong>頁面檔案是獨立存放於一個目錄中的</strong>，像是我剛剛建立了 about 頁面，頁面存放位置於 <code>hexo\source\about</code> 內，而檔案名稱為 <code>index.md</code>。</p>
<p>因此如果你要將草稿建立成頁面，假設你的頁面叫做「message」，就要在 source 目錄內建立一個名為 message 的目錄，將草稿檔案移進去目錄後，將檔案名稱改為 <code>index.md</code> 即可。</p>
<p>如果我們想使頁面不能留言，就再加上 <code>comments: false</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">title: about</span><br><span class="line">date: 2021-08-28 18:46:39</span><br><span class="line">comments: false </span><br></pre></td></tr></table></figure>
<h3 id="利用主選單連到頁面"><a href="#利用主選單連到頁面" class="headerlink" title="利用主選單連到頁面"></a>利用主選單連到頁面</h3><p>開啟 <code>hexo\themes\next\_config.yml</code> 檔案並找到以下語法：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="attr">home:</span> <span class="string">/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-home</span></span><br><span class="line">  <span class="comment">#about: /about/ || fa fa-user</span></span><br><span class="line">  <span class="comment">#tags: /tags/ || fa fa-tags</span></span><br><span class="line">  <span class="comment">#categories: /categories/ || fa fa-th</span></span><br><span class="line">  <span class="attr">archives:</span> <span class="string">/archives/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-archive</span></span><br><span class="line">  <span class="comment">#schedule: /schedule/ || fa fa-calendar</span></span><br><span class="line">  <span class="comment">#sitemap: /sitemap.xml || fa fa-sitemap</span></span><br><span class="line">  <span class="comment">#commonweal: /404/ || fa fa-heartbeat</span></span><br></pre></td></tr></table></figure>
<p>我們只要將 <code>#about</code> 那一行解除註解即可。不過如果你的關於頁面不是設定成 about（或許可能是你的英文名字），那就改成你設定的名稱即可。</p>
<h3 id="標籤頁面優化"><a href="#標籤頁面優化" class="headerlink" title="標籤頁面優化"></a>標籤頁面優化</h3><p>在 <code>hexo\themes\next\layout</code> 下新建 <code>tag-color.swig</code>，貼上以下代碼：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">  &lt;script type=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="line">     <span class="keyword">var</span> alltags = <span class="variable language_">document</span>.<span class="title function_">getElementsByClassName</span>(<span class="string">&#x27;tag-cloud-tags&#x27;</span>);</span><br><span class="line">     <span class="keyword">var</span> tags = alltags[<span class="number">0</span>].<span class="title function_">getElementsByTagName</span>(<span class="string">&#x27;a&#x27;</span>);</span><br><span class="line">     <span class="keyword">for</span> (<span class="keyword">var</span> i = tags.<span class="property">length</span> - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">       <span class="keyword">var</span> golden_ratio = <span class="number">0.618033988749895</span>;</span><br><span class="line">       <span class="keyword">var</span> s = <span class="number">0.5</span>;</span><br><span class="line">       <span class="keyword">var</span> v = <span class="number">0.999</span>;</span><br><span class="line">       <span class="keyword">var</span> h = golden_ratio + <span class="title class_">Math</span>.<span class="title function_">random</span>()*<span class="number">0.8</span> - <span class="number">0.5</span>;</span><br><span class="line">       <span class="keyword">var</span> h_i = <span class="built_in">parseInt</span>(h * <span class="number">6</span>);</span><br><span class="line">       <span class="keyword">var</span> f = h * <span class="number">6</span> - h_i;</span><br><span class="line">       <span class="keyword">var</span> p = v * (<span class="number">1</span> - s);</span><br><span class="line">       <span class="keyword">var</span> q = v * (<span class="number">1</span> - f * s);</span><br><span class="line">       <span class="keyword">var</span> t = v * (<span class="number">1</span> - (<span class="number">1</span> - f) * s);</span><br><span class="line">       <span class="keyword">var</span> r, g, b;</span><br><span class="line">       <span class="keyword">switch</span> (h_i) &#123;</span><br><span class="line">          <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">              r = v;</span><br><span class="line">              g = t;</span><br><span class="line">              b = p;</span><br><span class="line">              <span class="keyword">break</span>;</span><br><span class="line">          <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">              r = q;</span><br><span class="line">              g = v;</span><br><span class="line">              b = p;</span><br><span class="line">              <span class="keyword">break</span>;</span><br><span class="line">          <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">              r = p;</span><br><span class="line">              g = v;</span><br><span class="line">              b = t;</span><br><span class="line">              <span class="keyword">break</span>;</span><br><span class="line">          <span class="keyword">case</span> <span class="number">3</span> :</span><br><span class="line">              r = p;</span><br><span class="line">              g = q;</span><br><span class="line">              b = v;</span><br><span class="line">              <span class="keyword">break</span>;</span><br><span class="line">          <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">              r = t;</span><br><span class="line">              g = p;</span><br><span class="line">              b = v;</span><br><span class="line">              <span class="keyword">break</span>;</span><br><span class="line">          <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">              r = v;</span><br><span class="line">              g = p;</span><br><span class="line">              b = q;</span><br><span class="line">              <span class="keyword">break</span>;</span><br><span class="line">          <span class="attr">default</span>:</span><br><span class="line">              r = <span class="number">1</span>;</span><br><span class="line">              g = <span class="number">1</span>;</span><br><span class="line">              b = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">       tags[i].<span class="property">style</span>.<span class="property">background</span> = <span class="string">&quot;rgba(&quot;</span>+<span class="built_in">parseInt</span>(r*<span class="number">255</span>)+<span class="string">&quot;,&quot;</span>+<span class="built_in">parseInt</span>(g*<span class="number">255</span>)+<span class="string">&quot;,&quot;</span>+<span class="built_in">parseInt</span>(b*<span class="number">255</span>)+<span class="string">&quot;,&quot;</span>+<span class="number">0.5</span>+<span class="string">&quot;)&quot;</span>;</span><br><span class="line">     &#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="selector-class">.tag-cloud-tags</span>&#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">text-align</span>: center;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">counter-reset</span>: tags;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="selector-class">.tag-cloud-tags</span> <span class="selector-tag">a</span>&#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">display</span>: inline-block;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">border</span>: <span class="number">0px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">border-radius</span>: <span class="number">10px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">padding</span>: <span class="number">0px</span> <span class="number">10px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">margin</span>: <span class="number">8px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">color</span>: <span class="built_in">rgba</span>(<span class="number">34</span>, <span class="number">34</span>, <span class="number">34</span>, <span class="number">0.8</span>);</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    </span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"><span class="comment">/* 文字前添加相应的符号，content后的Unicode可以自定义*/</span></span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="selector-class">.tag-cloud-tags</span> <span class="selector-tag">a</span><span class="selector-pseudo">:before</span>&#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">font-family</span>: <span class="string">&#x27;Font Awesome 5 Free&#x27;</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">content</span>: <span class="string">&quot;\f02b&quot;</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">    <span class="attribute">font-weight</span>: <span class="number">900</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  <span class="selector-class">.tag-cloud-tags</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span>&#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">     <span class="attribute">box-shadow</span>: <span class="number">0px</span> <span class="number">5px</span> <span class="number">15px</span> <span class="number">0px</span> <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,.<span class="number">4</span>);</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">     <span class="attribute">transform</span>: <span class="built_in">scale</span>(<span class="number">1.1</span>);</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">     <span class="attribute">transition-duration</span>: <span class="number">0.15s</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure>
<p>在來就是要來撰寫隨機生成顏色的部分</p>
<p>打開 <code>hexo\theme\next\layout\page.swig</code>，ctrl + F 搜尋 <code>&lt;div class=&quot;tag-cloud-title&quot;&gt;</code></p>
<p>修改代碼如下 (<font color="red">不要直接複製</font>，左側的 <code>+</code> 代表加了這行，<code>-</code> 代表刪除這行)</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">      &lt;div <span class="keyword">class</span>=<span class="string">&quot;post-body&#123;%- if page.direction and page.direction.toLowerCase() === &#x27;rtl&#x27; %&#125; rtl&#123;%- endif %&#125;&quot;</span>&gt;</span><br><span class="line">        &#123;%- <span class="keyword">if</span> page.<span class="property">type</span> === <span class="string">&#x27;tags&#x27;</span> %&#125;</span><br><span class="line">          &lt;div <span class="keyword">class</span>=<span class="string">&quot;tag-cloud&quot;</span>&gt;</span><br><span class="line">            <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;tag-cloud-title&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">              &#123;&#123; _p(&#x27;counter.tag_cloud&#x27;, site.tags.length) &#125;&#125;</span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">            <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;tag-cloud-tags&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">              &#123;&#123; tagcloud(&#123;</span></span><br><span class="line"><span class="language-xml">                min_font   : theme.tagcloud.min,</span></span><br><span class="line"><span class="language-xml">                max_font   : theme.tagcloud.max,</span></span><br><span class="line"><span class="language-xml">                amount     : theme.tagcloud.amount,</span></span><br><span class="line"><span class="language-xml">-                color      : true,</span></span><br><span class="line"><span class="language-xml">+                color      : false,</span></span><br><span class="line"><span class="language-xml">                start_color: theme.tagcloud.start,</span></span><br><span class="line"><span class="language-xml">                end_color  : theme.tagcloud.end&#125;)</span></span><br><span class="line"><span class="language-xml">              &#125;&#125;</span></span><br><span class="line"><span class="language-xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">+       &#123;% include <span class="string">&#x27;tag-color.swig&#x27;</span> %&#125;  </span><br></pre></td></tr></table></figure>
<p>如果是 darkmode 嫌文字顏色不搭可以將 <code>hexo\theme\next\layout\page.swig</code> 的這兩行  :</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="attr">start_color</span>: theme.<span class="property">tagcloud</span>.<span class="property">start</span>,</span><br><span class="line">end_color  : theme.<span class="property">tagcloud</span>.<span class="property">end</span></span><br></pre></td></tr></table></figure>
<p>改成</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="attr">start_color</span>: white,</span><br><span class="line">end_color  : white</span><br></pre></td></tr></table></figure>
<p>如果不想要 tag 的話可以改 <code>hexo\themes\next\layout\tag-color.swig</code> 的這裡</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 文字前添加相应的符号，content后的Unicode可以自定义*/</span></span><br><span class="line">  .<span class="property">tag</span>-cloud-tags <span class="attr">a</span>:before&#123;</span><br><span class="line">    font-<span class="attr">family</span>: <span class="string">&#x27;Font Awesome 5 Free&#x27;</span>;</span><br><span class="line">    <span class="attr">content</span>: <span class="string">&quot;\f02b&quot;</span>;</span><br><span class="line">    font-<span class="attr">weight</span>: <span class="number">900</span>;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>
<p>改成</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 文字前添加相应的符号，content后的Unicode可以自定义*/</span></span><br><span class="line">  .<span class="property">tag</span>-cloud-tags <span class="attr">a</span>:before&#123;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>
<h3 id="搜尋功能"><a href="#搜尋功能" class="headerlink" title="搜尋功能"></a>搜尋功能</h3><h2 id="hexo-generator-searchdb"><a href="#hexo-generator-searchdb" class="headerlink" title="hexo-generator-searchdb"></a>hexo-generator-searchdb</h2><p>在根目錄 <code>hexo</code> 開啟 cmd</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure>
<p>接下來因為 hexo-generator-searchdb 這個套件是針對 NexT 優化出的，所以就可以找得到相關的設置在 <code>hexo\themes\next\_config.yml</code></p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Local Search</span></span><br><span class="line"><span class="comment"># Dependencies: https://github.com/theme-next/hexo-generator-searchdb</span></span><br><span class="line"><span class="attr">local_search:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># If auto, trigger search by changing input.</span></span><br><span class="line">  <span class="comment"># If manual, trigger search by pressing enter key or search button.</span></span><br><span class="line">  <span class="attr">trigger:</span> <span class="string">auto</span></span><br><span class="line">  <span class="comment"># Show top n results per article, show all results by setting to -1</span></span><br><span class="line">  <span class="attr">top_n_per_article:</span> <span class="number">1</span></span><br><span class="line">  <span class="comment"># Unescape html strings to the readable one.</span></span><br><span class="line">  <span class="attr">unescape:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># Preload the search data when the page loads.</span></span><br><span class="line">  <span class="attr">preload:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure>
<p>只需要將 <code>enable</code> 改成 <code>true</code> 就可以讓自己網站資源搜尋功能囉。</p>
<p><img src="https://ithelp.ithome.com.tw/upload/images/20201003/20119486pLMHhD3k3H.png" alt="範例"></p>
<h2 id="閱讀進度條"><a href="#閱讀進度條" class="headerlink" title="閱讀進度條"></a>閱讀進度條</h2><p>頂部或是底部有個進度條，隨著你的閱讀進度進行滑動。</p>
<p>在 <code>hexo\themes\next\_config.yml</code> 找到以下這段語法：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Reading progress bar</span></span><br><span class="line"><span class="attr">reading_progress:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># Available values: top | bottom</span></span><br><span class="line">  <span class="attr">position:</span> <span class="string">top</span></span><br><span class="line">  <span class="attr">color:</span> <span class="string">&quot;#37c6c0&quot;</span></span><br><span class="line">  <span class="attr">height:</span> <span class="string">3px</span></span><br></pre></td></tr></table></figure>
<ul>
<li>enable：設定是否開啟進度條，開啟則設定 true</li>
<li>position：設定進度條在頂部還是底部顯示</li>
<li>color：進度條背景顏色</li>
<li>height：進度條高度</li>
</ul>
<p>將 <code>enable: true</code> 即可</p>
<h2 id="回到頂部按鈕"><a href="#回到頂部按鈕" class="headerlink" title="回到頂部按鈕"></a>回到頂部按鈕</h2><p><img src="https://i.imgur.com/9rtDXiJ.png" alt=""></p>
<p>在 <code>hexo\themes\next\_config.yml</code> 找到以下這段語法：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">back2top:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># Back to top in sidebar.</span></span><br><span class="line">  <span class="attr">sidebar:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># Scroll percent label in b2t button.</span></span><br><span class="line">  <span class="attr">scrollpercent:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure>
<ul>
<li>將 sidebar 設定為 true：設定在側邊欄的個人資訊區塊中，Social Links 下，顯示回到頂部按鈕</li>
<li>將 scrollpercent 設定為 true：回到頂部按鈕旁加上閱讀進度百分比。</li>
</ul>
<h2 id="閱讀全文按鈕"><a href="#閱讀全文按鈕" class="headerlink" title="閱讀全文按鈕"></a>閱讀全文按鈕</h2><p>在文章想切斷的地方加入以下這行(獨立的一行)</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&lt;!-- more --&gt;</span><br></pre></td></tr></table></figure>
<div class="note info no-icon">
            <h3 id="如何始點擊「閱讀全文」自動跳到最頂層"><a href="#如何始點擊「閱讀全文」自動跳到最頂層" class="headerlink" title="如何始點擊「閱讀全文」自動跳到最頂層?"></a>如何始點擊「閱讀全文」自動跳到最頂層?</h3><p><div class="note default">            <p>如果你覺得點擊閱讀全文就應該從切斷的地方繼續讀那可以跳過這裡</p>          </div></p><p>到 <code>hexo\themes\next\lauout\_macro\post.swig</code> 裡面找到以下語法</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">   &lt;!--/noindex--&gt;</span><br><span class="line">&#123;% elif post.excerpt %&#125;</span><br><span class="line">        &#123;&#123; post.excerpt &#125;&#125;</span><br><span class="line">        &lt;!--noindex--&gt;</span><br><span class="line">        &#123;%- if theme.read_more_btn %&#125;</span><br><span class="line">    &lt;div class=&quot;post-button&quot;&gt;</span><br><span class="line">            &lt;a class=&quot;btn&quot; href=&quot;&#123;&#123; url_for(post.path) &#125;&#125;#more&quot; rel=&quot;contents&quot;&gt;</span><br><span class="line">        &#123;&#123; __(&#x27;post.read_more&#x27;) &#125;&#125; &amp;raquo;</span><br><span class="line">            &lt;/a&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">        &#123;%- endif %&#125;</span><br><span class="line">        &lt;!--/noindex--&gt;</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/lfp2wYE.png" alt="刪除反白的 #more" style="zoom: 33%;" /></p><p>將 <code>#more</code> 刪掉即可 (上面圖片有反白)</p>
          </div>
<h2 id="程式碼區塊樣式"><a href="#程式碼區塊樣式" class="headerlink" title="程式碼區塊樣式"></a>程式碼區塊樣式</h2><h3 id="內建"><a href="#內建" class="headerlink" title="內建"></a>內建</h3><p>在 <code>hexo\themes\next\_config.yml</code> 找到以下這段語法：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">codeblock:</span></span><br><span class="line">  <span class="comment"># Code Highlight theme</span></span><br><span class="line">  <span class="comment"># Available values: normal | night | night eighties | night blue | night bright | solarized | solarized dark | galactic</span></span><br><span class="line">  <span class="comment"># See: https://github.com/chriskempson/tomorrow-theme</span></span><br><span class="line">  <span class="attr">highlight_theme:</span> <span class="string">normal</span></span><br><span class="line">  <span class="comment"># Add copy button on codeblock</span></span><br><span class="line">  <span class="attr">copy_button:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">    <span class="comment"># Show text copy result.</span></span><br><span class="line">    <span class="attr">show_result:</span> <span class="literal">false</span></span><br><span class="line">    <span class="comment"># Available values: default | flat | mac</span></span><br><span class="line">    <span class="attr">style:</span></span><br></pre></td></tr></table></figure>
<p>將 <code>highlight_theme: normal</code> 改成 <code>highlight_theme: night bright</code></p>
<h2 id="加上數學式"><a href="#加上數學式" class="headerlink" title="加上數學式"></a>加上數學式</h2><p>在 <code>hexo\themes\next\_config.yml</code> 中：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Math Formulas Render Support</span></span><br><span class="line"><span class="attr">math:</span></span><br><span class="line">  <span class="comment"># Default (true) will load mathjax / katex script on demand.</span></span><br><span class="line">  <span class="comment"># That is it only render those page which has `mathjax: true` in Front-matter.</span></span><br><span class="line">  <span class="comment"># If you set it to false, it will load mathjax / katex srcipt EVERY PAGE.</span></span><br><span class="line">  <span class="attr">per_page:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># hexo-renderer-pandoc (or hexo-renderer-kramed) requi#FC4E4E for full MathJax support.</span></span><br><span class="line">  <span class="attr">mathjax:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="comment"># See: https://mhchem.github.io/MathJax-mhchem/</span></span><br><span class="line">    <span class="attr">mhchem:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># hexo-renderer-markdown-it-plus (or hexo-renderer-markdown-it with markdown-it-katex plugin) requi#FC4E4E for full Katex support.</span></span><br><span class="line">  <span class="attr">katex:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">    <span class="comment"># See: https://github.com/KaTeX/KaTeX/tree/master/contrib/copy-tex</span></span><br><span class="line">    <span class="attr">copy_tex:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure>
<p>在 window powershell 打上以下指令</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">npm uninstall hexo<span class="literal">-renderer-marked</span> <span class="literal">--save</span></span><br><span class="line">npm install hexo<span class="literal">-renderer-pandoc</span> <span class="literal">--save</span></span><br></pre></td></tr></table></figure>
<p>另外需要注意，如果置 <code>mathjax: true</code>，且使用了 <code>hexo-renderer-kramed</code> 渲染引擎，會遇到一行只能使用一個行內公式的情況。</p>
<p>解決方法是到路徑 <code>hexo\node_modules\kramed\lib\rules\inline.js</code> 將</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> inline = &#123;</span><br><span class="line">  <span class="attr">escape</span>: <span class="regexp">/^\\([\\`*&#123;&#125;\[\]()#$+\-.!_&gt;])/</span>,</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">  <span class="attr">em</span>: <span class="regexp">/^\b_((?:__|[\s\S])+?)_\b|^\*((?:\*\*|[\s\S])+?)\*(?!\*)/</span>,</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p>修改為</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> inline = &#123;</span><br><span class="line">  <span class="attr">escape</span>: <span class="regexp">/^\\([`*\[\]()#$+\-.!_&gt;])/</span>,</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">  <span class="attr">em</span>: <span class="regexp">/^\*((?:\*\*|[\s\S])+?)\*(?!\*)/</span>,</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p>最後，記得在想使用 latex math 的檔案下，加上 <code>mathjax: true</code></p>
<p><img src="https://i.imgur.com/UmFMIeL.png" style="zoom:67%;" /></p>
<p>就可以使用 $\LaTeX$ 了</p>
<h2 id="添加作者頭像"><a href="#添加作者頭像" class="headerlink" title="添加作者頭像"></a>添加作者頭像</h2><p>到 <code>hexo\themes\next\_config.yml</code> 找到下面這行</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Sidebar Avatar</span></span><br><span class="line"><span class="attr">avatar:</span></span><br><span class="line">  <span class="comment"># Replace the default image and set the url here.</span></span><br><span class="line">  <span class="attr">url:</span> </span><br><span class="line">  <span class="comment"># If true, the avatar will be dispalyed in circle.</span></span><br><span class="line">  <span class="attr">rounded:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># If true, the avatar will be rotated with the cursor.</span></span><br><span class="line">  <span class="attr">rotated:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure>
<ul>
<li>url : 網址</li>
<li>rounded: 是否圓框</li>
<li>rotated: 是否在鼠標移到上面時旋轉一圈</li>
</ul>
<p>將自訂的圖片傳到 <code>hexo\themes\next\source\images</code> 然後在 <code>url:</code> 後面打上 <code>\images\檔案名稱 + 格式</code></p>
<p>例如我加入了一張名為 <code>coffee.jpg</code> 的圖片，以下是我的 code</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Sidebar Avatar</span></span><br><span class="line"><span class="attr">avatar:</span></span><br><span class="line">  <span class="comment"># Replace the default image and set the url here.</span></span><br><span class="line">  <span class="attr">url:</span> <span class="string">/images/coffee.jpg</span></span><br><span class="line">  <span class="comment"># If true, the avatar will be dispalyed in circle.</span></span><br><span class="line">  <span class="attr">rounded:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># If true, the avatar will be rotated with the cursor.</span></span><br><span class="line">  <span class="attr">rotated:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure>
<h2 id="增設留言區"><a href="#增設留言區" class="headerlink" title="增設留言區"></a>增設留言區</h2><p>代補</p>
<h2 id="在文章撰寫特殊區塊"><a href="#在文章撰寫特殊區塊" class="headerlink" title="在文章撰寫特殊區塊"></a>在文章撰寫特殊區塊</h2><h3 id="note"><a href="#note" class="headerlink" title="note"></a>note</h3><figure class="highlight jinja"><table><tr><td class="code"><pre><span class="line"><span class="template-tag">&#123;% <span class="name">note</span> [class] [no-icon] %&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">文章內容</span></span><br><span class="line"><span class="language-xml"></span><span class="template-tag">&#123;% <span class="name">endnote</span> %&#125;</span></span><br></pre></td></tr></table></figure>
<ul>
<li><code>[class]</code>  :  note 格式，有六種選項 : <code>default</code> , <code>primary</code>, <code>success</code>, <code>info</code>, <code>warning</code> , <code>danger</code></li>
<li><code>[no-icon]</code> : 打上 <code>no-icon</code> 即可將 icon 去除</li>
</ul>
<p>以下是範例</p>
<figure class="highlight jinja"><table><tr><td class="code"><pre><span class="line"><span class="template-tag">&#123;% <span class="name">note</span>  success no-icon %&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">#### 標題</span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">這裡是內容</span></span><br><span class="line"><span class="language-xml">&gt; 支援引用區塊</span></span><br><span class="line"><span class="language-xml">```</span></span><br><span class="line"><span class="language-xml">也支援程式碼區塊</span></span><br><span class="line"><span class="language-xml">```</span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"></span><span class="template-tag">&#123;% <span class="name">endnote</span> %&#125;</span></span><br></pre></td></tr></table></figure>
<div class="note success no-icon">
            <h4 id="標題"><a href="#標題" class="headerlink" title="標題"></a>標題</h4><p>這裡是內容</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">也支援程式碼區塊</span><br></pre></td></tr></table></figure><blockquote><p>支援引用區塊</p></blockquote>
          </div>
<h4 id="更改-note-樣式"><a href="#更改-note-樣式" class="headerlink" title="更改 note 樣式"></a>更改 note 樣式</h4><p>到 <code>hexo\themes\next\_config.yml</code> 中找到以下代碼</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Note tag (bs-callout)</span></span><br><span class="line"><span class="attr">note:</span></span><br><span class="line">  <span class="comment"># Note tag style values:</span></span><br><span class="line">  <span class="comment">#  - simple    bs-callout old alert style. Default.</span></span><br><span class="line">  <span class="comment">#  - modern    bs-callout new (v2-v3) alert style.</span></span><br><span class="line">  <span class="comment">#  - flat      flat callout style with background, like on Mozilla or StackOverflow.</span></span><br><span class="line">  <span class="comment">#  - disabled  disable all CSS styles import of note tag.</span></span><br><span class="line">  <span class="attr">style:</span> <span class="string">flat</span></span><br><span class="line">  <span class="attr">icons:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># Offset lighter of background in % for modern and flat styles (modern: -12 | 12; flat: -18 | 6).</span></span><br><span class="line">  <span class="comment"># Offset also applied to label tag variables. This option can work with disabled note tag.</span></span><br><span class="line">  <span class="attr">light_bg_offset:</span> <span class="number">0</span></span><br></pre></td></tr></table></figure>
<ul>
<li>更改 <code>style: flat</code> 為以下選擇<ul>
<li><code>style: modern</code></li>
<li><code>style: simple</code></li>
<li><code>style: flat</code></li>
</ul>
</li>
</ul>
<h3 id="頁籤功能"><a href="#頁籤功能" class="headerlink" title="頁籤功能"></a>頁籤功能</h3><p>看一下範例 :</p>
<div class="tabs" id="mytab"><ul class="nav-tabs"><li class="tab"><a href="#mytab-1">mytab 1</a></li><li class="tab active"><a href="#mytab-2">mytab 2</a></li><li class="tab"><a href="#mytab-3">這是頁籤三</a></li><li class="tab"><a href="#mytab-4">mytab 4</a></li><li class="tab"><a href="#mytab-5"><i class="fa fa-user"></i>個人資料</a></li></ul><div class="tab-content"><div class="tab-pane" id="mytab-1"><h4 id="頁籤一"><a href="#頁籤一" class="headerlink" title="頁籤一"></a>頁籤一</h4><p>因沒有特別命名，所以此頁籤會用 <code>mytab</code> 加上流水號。</p></div><div class="tab-pane active" id="mytab-2"><h4 id="頁籤二"><a href="#頁籤二" class="headerlink" title="頁籤二"></a>頁籤二</h4><p>開無痕進來會先看到我。</p></div><div class="tab-pane" id="mytab-3"><h4 id="頁籤三"><a href="#頁籤三" class="headerlink" title="頁籤三"></a>頁籤三</h4><p>這裡有命名，會看到頁籤名不一樣。</p></div><div class="tab-pane" id="mytab-4"><h4 id="頁籤四"><a href="#頁籤四" class="headerlink" title="頁籤四"></a>頁籤四</h4><p>可以看到這裡的流水號是從 4 開始，應該是抓 array index 作為流水號。</p></div><div class="tab-pane" id="mytab-5"><h4 id="頁籤五"><a href="#頁籤五" class="headerlink" title="頁籤五"></a>頁籤五</h4><p>這裡有加 icon，有什麼 icon 可以來<a href="https://fontawesome.com/icons">這裡</a>找。</p></div></div></div>
<p>在文件中打上 :</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% tabs mytab,2 %&#125; 將 tab 取名為 mytab，預設會選取第二個頁籤，使用 -1 會不選取</span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="section">### 頁籤一</span></span><br><span class="line"></span><br><span class="line">因沒有特別命名，所以此頁籤會用 <span class="code">`mytab`</span> 加上流水號。</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="section">### 頁籤二</span></span><br><span class="line"></span><br><span class="line">開無痕進來會先看到我。</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&lt;!-- tab 這是頁籤三 --&gt;</span><br><span class="line"><span class="section">### 頁籤三</span></span><br><span class="line"></span><br><span class="line">這裡有命名，會看到頁籤名不一樣。</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="section">### 頁籤四</span></span><br><span class="line"></span><br><span class="line">可以看到這裡的流水號是從 4 開始，應該是抓 array index 作為流水號。</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&lt;!-- tab 個人資料 @user --&gt;</span><br><span class="line"><span class="section">### 頁籤五</span></span><br><span class="line"></span><br><span class="line">這裡有加 icon，有什麼 icon 可以來[<span class="string">這裡</span>](<span class="link">https://fontawesome.com/icons</span>)找。</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure>
<h3 id="spoiler"><a href="#spoiler" class="headerlink" title="spoiler"></a>spoiler</h3><p>在 <code>hexo</code> 開啟 <code>cmd</code> ，打上以下指令</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">npm install hexo<span class="literal">-sliding-spoiler</span> <span class="literal">--save</span></span><br></pre></td></tr></table></figure>
<p>修改 <code>hexo\node_modules\hexo-sliding-spoiler\assets\spoiler.css</code> 為以下 code</p>
<div class='spoiler collapsed'>
    <div class='spoiler-title'>
        code
    </div>
    <div class='spoiler-content'>
        <figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.spoiler</span> &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">5px</span> <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">15px</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">3px</span> solid <span class="built_in">rgb</span>(<span class="number">105</span>, <span class="number">105</span>, <span class="number">105</span>);</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">clear</span>: both;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">3px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.spoiler</span> <span class="selector-class">.spoiler-title</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">rgb</span>(<span class="number">105</span>, <span class="number">105</span>, <span class="number">105</span>);</span><br><span class="line">    <span class="attribute">opacity</span>: <span class="number">1</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> -<span class="number">15px</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">5px</span> <span class="number">15px</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="built_in">rgb</span>(<span class="number">200</span>, <span class="number">200</span>, <span class="number">200</span>);</span><br><span class="line">    <span class="attribute">font-weight</span>: bold;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">cursor</span>: pointer;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.spoiler</span> <span class="selector-class">.spoiler-title</span><span class="selector-pseudo">:before</span> &#123;</span><br><span class="line">    <span class="attribute">font-weight</span>: bold;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.spoiler</span><span class="selector-class">.collapsed</span> <span class="selector-class">.spoiler-title</span><span class="selector-pseudo">:before</span> &#123;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">&quot;▲ &quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.spoiler</span><span class="selector-class">.expanded</span> <span class="selector-class">.spoiler-title</span><span class="selector-pseudo">:before</span> &#123;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">&quot;▼ &quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.spoiler</span> <span class="selector-class">.spoiler-content</span> &#123;</span><br><span class="line">    <span class="attribute">padding-top</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding-bottom</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">margin-bottom</span>: <span class="number">0</span>;</span><br><span class="line">    -moz-<span class="attribute">transition-duration</span>: <span class="number">0.3s</span>;</span><br><span class="line">    -webkit-<span class="attribute">transition-duration</span>: <span class="number">0.3s</span>;</span><br><span class="line">    -o-<span class="attribute">transition-duration</span>: <span class="number">0.3s</span>;</span><br><span class="line">    <span class="attribute">transition-duration</span>: <span class="number">0.3s</span>;</span><br><span class="line">    -moz-<span class="attribute">transition-timing-function</span>: ease-in-out;</span><br><span class="line">    -webkit-<span class="attribute">transition-timing-function</span>: ease-in-out;</span><br><span class="line">    -o-<span class="attribute">transition-timing-function</span>: ease-in-out;</span><br><span class="line">    <span class="attribute">transition-timing-function</span>: ease-in-out;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.spoiler</span><span class="selector-class">.collapsed</span> <span class="selector-class">.spoiler-content</span> &#123;</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">    <span class="attribute">max-height</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.spoiler</span><span class="selector-class">.expanded</span> <span class="selector-class">.spoiler-content</span> &#123;</span><br><span class="line">    <span class="attribute">max-height</span>: <span class="number">3000px</span>;</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.spoiler</span> <span class="selector-class">.spoiler-content</span> <span class="selector-tag">p</span><span class="selector-pseudo">:first</span>-child &#123;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">0</span> <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

    </div>
</div>
<p>用法就是跟 note 差不多，在 markdown 文件打上</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% spoiler 顯示文字 %&#125;</span><br><span class="line">隱藏內容</span><br><span class="line">&#123;% endspoiler %&#125;</span><br></pre></td></tr></table></figure>
<p>以下是範例</p>
<figure class="highlight markdown"><figcaption><span>範例</span></figcaption><table><tr><td class="code"><pre><span class="line">&#123;% spoiler &quot;點擊隱/顯內容&quot; %&#125;</span><br><span class="line"></span><br><span class="line">隱藏的內容</span><br><span class="line">支持 markdown 語法，代碼塊，數學式</span><br><span class="line"></span><br><span class="line"><span class="code">```c++</span></span><br><span class="line"><span class="code">#include &lt;bits/stdc++.h&gt;</span></span><br><span class="line"><span class="code">using namespace std;</span></span><br><span class="line"><span class="code">int main() &#123;</span></span><br><span class="line"><span class="code">	cout &lt;&lt; &quot;Hello World!&quot; &lt;&lt; &#x27;\n&#x27;;</span></span><br><span class="line"><span class="code">	return 0;</span></span><br><span class="line"><span class="code">&#125;</span></span><br><span class="line"><span class="code">```</span></span><br><span class="line"></span><br><span class="line">$$</span><br><span class="line">e^&#123;ix&#125; = cosx+isinx</span><br><span class="line">$$</span><br><span class="line"></span><br><span class="line">&#123;% endspoiler %&#125;</span><br></pre></td></tr></table></figure>
<div class='spoiler collapsed'>
    <div class='spoiler-title'>
        點擊隱/顯內容
    </div>
    <div class='spoiler-content'>
        <p>隱藏的內容<br>支持 markdown 語法，代碼塊，數學式</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;Hello World!&quot;</span> &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<script type="math/tex; mode=display">
e^{ix} = cosx+isinx</script>
    </div>
</div> 
<h2 id="加入-emoji"><a href="#加入-emoji" class="headerlink" title="加入 emoji"></a>加入 emoji</h2><p>在 <code>hexo</code> 資料夾開啟 <code>cmd</code> 打上 :</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">npm install hexo<span class="literal">-filter-emoji</span></span><br></pre></td></tr></table></figure>
<p>然後就可以在 markdown 檔案用了</p>
<p>用法 : <code>:emoji_name:</code> 跟 discord emoji 的用法一樣</p>
<h2 id="自訂樣式"><a href="#自訂樣式" class="headerlink" title="自訂樣式"></a>自訂樣式</h2><h3 id="建立-styles-styl"><a href="#建立-styles-styl" class="headerlink" title="建立 styles.styl"></a>建立 styles.styl</h3><div class="note info">
            <p>若要進行下面的設置，請務必要先看怎麼建立 <code>styles.styl</code> 檔案 </p>
          </div>
<p> 在 <code>hexo\themes\next\_config.yml</code> 中找到</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Define custom file paths.</span></span><br><span class="line"><span class="comment"># Create your custom files in site directory `source/_data` and uncomment needed files below.</span></span><br><span class="line"><span class="attr">custom_file_path:</span></span><br><span class="line">  <span class="comment">#head: source/_data/head.swig</span></span><br><span class="line">  <span class="comment">#header: source/_data/header.swig</span></span><br><span class="line">  <span class="comment">#sidebar: source/_data/sidebar.swig</span></span><br><span class="line">  <span class="comment">#postMeta: source/_data/post-meta.swig</span></span><br><span class="line">  <span class="comment">#postBodyEnd: source/_data/post-body-end.swig</span></span><br><span class="line">  <span class="comment">#footer: source/_data/footer.swig</span></span><br><span class="line">  <span class="comment">#bodyEnd: source/_data/body-end.swig</span></span><br><span class="line">  <span class="comment">#variable: source/_data/variables.styl</span></span><br><span class="line">  <span class="comment">#mixin: source/_data/mixins.styl</span></span><br><span class="line">  <span class="comment">#style: source/_data/styles.styl</span></span><br></pre></td></tr></table></figure>
<p>將 <code>#style: source/_data/styles.styl</code> 的註解弄掉</p>
<p>然後去 <code>hexo\source</code> 裡面新建一個名為 <code>_data</code> 的資料夾 (名稱一定要是 <code>_data</code> 不可自行更換)</p>
<p>進入你建立的 <code>_data</code> 資料夾內，建立名為 <code>styles.styl</code> 的文件</p>
<h3 id="連結顏色更改"><a href="#連結顏色更改" class="headerlink" title="連結顏色更改"></a>連結顏色更改</h3><p>在 <code>hexo\source\_data\styles.styl</code> 加上：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">// 修改選中文字底色</span><br><span class="line"><span class="comment">/* webkit, opera, IE9 */</span></span><br><span class="line"><span class="selector-pseudo">::selection</span> &#123; </span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#00c4b6</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#f7f7f7</span>; </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* firefox */</span></span><br><span class="line">::-moz-selection &#123; </span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#00c4b6</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#f7f7f7</span>;    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>如果想修改 note 裡面的連結顏色，加上 :</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.post-body</span> <span class="selector-class">.note</span> <span class="selector-tag">p</span> <span class="selector-tag">a</span>, <span class="selector-class">.post-body</span> <span class="selector-class">.note</span> <span class="selector-tag">p</span> <span class="selector-tag">span</span><span class="selector-class">.exturl</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#0593d3</span>;</span><br><span class="line">  <span class="attribute">border-bottom</span>: none;</span><br><span class="line">  <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid <span class="number">#0593d3</span>;</span><br><span class="line">  &amp;<span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fc6423</span>;</span><br><span class="line">    <span class="attribute">border-bottom</span>: none;</span><br><span class="line">    <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid <span class="number">#fc6423</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="反白顏色更改"><a href="#反白顏色更改" class="headerlink" title="反白顏色更改"></a>反白顏色更改</h3><p>在 <code>hexo\source\_data\styles.styl</code> 加上</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-pseudo">::selection</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#3390FF</span>;</span><br><span class="line">    <span class="attribute">color</span>: white;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>上面只包含了文章的反白顏色 (不含 <code>note</code>)</p>
<p>以下是 <code>note</code> 的反白顏色，一樣加在 <code>hexo\source\_data\styles.styl</code> </p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.post-body</span> <span class="selector-class">.note</span> &#123;</span><br><span class="line">  <span class="selector-pseudo">::selection</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#C4E7E8</span>;</span><br><span class="line">    <span class="attribute">color</span>: black;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="加上背景圖片"><a href="#加上背景圖片" class="headerlink" title="加上背景圖片"></a>加上背景圖片</h3><p>在 <code>hexo\source\_data\styles.styl</code> 加上</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">      <span class="attribute">background</span>:<span class="built_in">url</span>(<span class="string">圖片網址</span>);</span><br><span class="line">      <span class="attribute">background-size</span>: cover;</span><br><span class="line">      <span class="attribute">background-repeat</span>: no-repeat;</span><br><span class="line">      <span class="attribute">background-attachment</span>: fixed;</span><br><span class="line">      <span class="attribute">background-position</span>:center center;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>如果是在網路上的圖片，複製圖片位址，然後將 「圖片網址」改成你複製的圖片位址</li>
<li>如果是在本地的圖片，存在 <code>hexo\source\images</code> (如果沒有此資料夾自己創建一個)，然後把「圖片網址」改成 <code>/images/檔案+格式</code><ul>
<li>例如 <code>/images/img.jpg</code></li>
</ul>
</li>
</ul>
<h3 id="文章透明"><a href="#文章透明" class="headerlink" title="文章透明"></a>文章透明</h3><p>在 <code>hexo\source\_data\styles.styl</code> 加上</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.content-wrap</span> &#123;</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">0.95</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.side</span> bar &#123;</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">0.95</span>;</span><br><span class="line">  <span class="attribute">color</span>: white;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.popup</span> &#123;</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">0.95</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>其中的 <code>opacity: 0.95</code> 是透明度，可以自己調整</p>
<h3 id="修改字體顏色"><a href="#修改字體顏色" class="headerlink" title="修改字體顏色"></a>修改字體顏色</h3><p>在 <code>hexo\source\_data\styles.styl</code> 加上</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#EBEBEB</span>; // 全局字體顏色</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>這裡修改了文章的字體顏色，如果想進一步修改 note 的顏色，請加上</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.post-body</span> <span class="selector-class">.note</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: black; // note 字體顏色</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="行內代碼塊顏色"><a href="#行內代碼塊顏色" class="headerlink" title="行內代碼塊顏色"></a>行內代碼塊顏色</h3><p>在 <code>hexo\source\_data\styles.styl</code> 加上</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">code</span> &#123;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">2px</span> <span class="number">4px</span>;</span><br><span class="line">  <span class="attribute">word-wrap</span>: break-word;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#c7254e</span>;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#f9f2f4</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">3px</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">18px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <tags>
        <tag>教學</tag>
        <tag>hexo next</tag>
      </tags>
  </entry>
  <entry>
    <title>XOR</title>
    <url>/2023/03/18/XOR/</url>
    <content><![CDATA[<h2 id="Maximum-Xor-Subset"><a href="#Maximum-Xor-Subset" class="headerlink" title="Maximum Xor Subset"></a>Maximum Xor Subset</h2><div class="note default no-icon">
            <h3 id="LOJ-113-最大异或和"><a href="#LOJ-113-最大异或和" class="headerlink" title="LOJ 113. 最大异或和"></a><a href="https://loj.ac/p/113">LOJ 113. 最大异或和</a></h3><p>給 $a_1\sim a_n$，問選一些元素 $\texttt{XOR}$ 起來，最大是多少</p><ul><li>$O(n\log n)$</li></ul>
          </div>
<ul>
<li>高斯消去</li>
<li>線性基</li>
</ul>
<div class='spoiler collapsed'>
    <div class='spoiler-title'>
        full code
    </div>
    <div class='spoiler-content'>
        <figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> pii pair<span class="string">&lt;int, int&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> mk make_pair</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> F first</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> S second</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ALL(x) x.begin(), x.end()</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> bit(i) (1LL &lt;&lt; i)</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> INF = <span class="number">2e18</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> maxn = <span class="number">3e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> M = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> K = <span class="number">60</span>;</span><br><span class="line"> </span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line">vector&lt;<span class="type">int</span>&gt; a;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">gauss</span> &#123;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; v;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">init</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">        v.<span class="built_in">resize</span> (K);</span><br><span class="line">        <span class="built_in">fill</span> (<span class="built_in">ALL</span>(v), <span class="number">-1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">insert</span> <span class="params">(<span class="type">int</span> x)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = K - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">            <span class="keyword">if</span> ((x &amp; <span class="built_in">bit</span> (i)) &amp;&amp; v[i] != <span class="number">-1</span>) &#123;</span><br><span class="line">                x ^= v[i];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> ((x &amp; <span class="built_in">bit</span> (i)) &amp;&amp; v[i] == <span class="number">-1</span>) &#123;</span><br><span class="line">                v[i] = x;</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">query</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> x = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = K - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">            <span class="keyword">if</span> (v[i] != <span class="number">-1</span> &amp;&amp; (x &amp; <span class="built_in">bit</span> (i)) == <span class="number">0</span>) &#123;</span><br><span class="line">                x ^= v[i];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> x;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">init</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    a.<span class="built_in">clear</span> ();</span><br><span class="line">    a.<span class="built_in">resize</span> (n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">    gauss G;</span><br><span class="line">    G.<span class="built_in">init</span> ();</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> x : a) &#123;</span><br><span class="line">        G.<span class="built_in">insert</span> (x);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    cout &lt;&lt; G.<span class="built_in">query</span> () &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125; </span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">// ios::sync_with_stdio(0);</span></span><br><span class="line">    <span class="comment">// cin.tie(0);</span></span><br><span class="line">    <span class="type">int</span> t = <span class="number">1</span>;</span><br><span class="line">    <span class="comment">//cin &gt;&gt; t;</span></span><br><span class="line">    <span class="keyword">while</span> (t--) &#123;</span><br><span class="line">        <span class="built_in">init</span> ();</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

    </div>
</div>
<h3 id="類似題"><a href="#類似題" class="headerlink" title="類似題"></a>類似題</h3><div class="note default no-icon">
            <h3 id="XORSUB"><a href="#XORSUB" class="headerlink" title="XORSUB"></a><a href="https://www.codechef.com/problems/XORSUB">XORSUB</a></h3><p>給 $a_1\sim a_n$，和 $x$，問選一些元素 $\texttt{XOR}$ 起來，再跟 $x\texttt{ XOR}$ 最大是多少</p><ul><li>$O(n\log n)$</li></ul>
          </div>
<div class='spoiler collapsed'>
    <div class='spoiler-title'>
        full code
    </div>
    <div class='spoiler-content'>
        <figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> pii pair<span class="string">&lt;int, int&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> mk make_pair</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> F first</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> S second</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ALL(x) x.begin(), x.end()</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> bit(i) (1LL &lt;&lt; i)</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> INF = <span class="number">2e18</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> maxn = <span class="number">3e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> M = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> K = <span class="number">60</span>;</span><br><span class="line"> </span><br><span class="line"><span class="type">int</span> n, x;</span><br><span class="line">vector&lt;<span class="type">int</span>&gt; a;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">gauss</span> &#123;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; v;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">init</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">        v.<span class="built_in">resize</span> (K);</span><br><span class="line">        <span class="built_in">fill</span> (<span class="built_in">ALL</span>(v), <span class="number">-1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">insert</span> <span class="params">(<span class="type">int</span> x)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = K - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">            <span class="keyword">if</span> ((x &amp; <span class="built_in">bit</span> (i)) &amp;&amp; v[i] != <span class="number">-1</span>) &#123;</span><br><span class="line">                x ^= v[i];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> ((x &amp; <span class="built_in">bit</span> (i)) &amp;&amp; v[i] == <span class="number">-1</span>) &#123;</span><br><span class="line">                v[i] = x;</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">query</span> <span class="params">(<span class="type">int</span> tar)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> x = tar;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = K - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">            <span class="keyword">if</span> (v[i] != <span class="number">-1</span> &amp;&amp; (x &amp; <span class="built_in">bit</span> (i)) == <span class="number">0</span>) &#123;</span><br><span class="line">                x ^= v[i];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> x;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">init</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; x;</span><br><span class="line">    a.<span class="built_in">clear</span> ();</span><br><span class="line">    a.<span class="built_in">resize</span> (n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">    gauss G;</span><br><span class="line">    G.<span class="built_in">init</span> ();</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> x : a) &#123;</span><br><span class="line">        G.<span class="built_in">insert</span> (x);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    cout &lt;&lt; G.<span class="built_in">query</span> (x) &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125; </span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">// ios::sync_with_stdio(0);</span></span><br><span class="line">    <span class="comment">// cin.tie(0);</span></span><br><span class="line">    <span class="type">int</span> t = <span class="number">1</span>;</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    <span class="keyword">while</span> (t--) &#123;</span><br><span class="line">        <span class="built_in">init</span> ();</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

    </div>
</div>
<h2 id="k-th-Xor-Subset"><a href="#k-th-Xor-Subset" class="headerlink" title="k-th Xor Subset"></a>k-th Xor Subset</h2><div class="note default no-icon">
            <h3 id="HDU-3949"><a href="#HDU-3949" class="headerlink" title="HDU 3949"></a><a href="https://vjudge.net/problem/HDU-3949">HDU 3949</a></h3><p>給 $a_1,…,a_n$ 問第 $k$ 小的 $\texttt{XOR subset}$ 是多少</p>
          </div>
<ul>
<li>假設在消去的之後線性基大小只有 $r$</li>
<li>若答案比 $2^r$ 還大，那就湊不出來</li>
<li>剩下就是把 $k$ 做二進制分解如果第 $i$ 個 $\texttt{bit}$ 是 $1$ 就把 $\texttt{ans XOR }$ 有被控制的第 $i$ 大的 $\texttt{bit}$</li>
</ul>
<p><img src="https://i.imgur.com/bfADSuZ.png =200x" style="zoom:33%;" /></p>
<div class='spoiler collapsed'>
    <div class='spoiler-title'>
        full code
    </div>
    <div class='spoiler-content'>
        <figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">gauss</span> &#123;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; v;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; u;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">init</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">        v.<span class="built_in">resize</span> (K);</span><br><span class="line">        <span class="built_in">fill</span> (<span class="built_in">ALL</span>(v), <span class="number">-1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">insert</span> <span class="params">(<span class="type">int</span> x)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; K; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (v[i] != <span class="number">-1</span> &amp;&amp; (x &amp; (<span class="number">1LL</span> &lt;&lt; i))) &#123;</span><br><span class="line">                x ^= v[i];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (x == <span class="number">0</span>) <span class="keyword">return</span>;</span><br><span class="line">        <span class="type">int</span> p = K;</span><br><span class="line">        <span class="keyword">while</span> ((x &amp; (<span class="number">1LL</span> &lt;&lt; p)) == <span class="number">0</span>) p--;</span><br><span class="line">        v[p] = x;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; K; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (i == p) <span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">if</span> (v[i] == <span class="number">-1</span>) <span class="keyword">continue</span>;</span><br><span class="line"> </span><br><span class="line">            <span class="keyword">if</span> (v[i] &amp; (<span class="number">1LL</span> &lt;&lt; p)) v[i] ^= v[p];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">query</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> x = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = K - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">            <span class="keyword">if</span> (v[i] != <span class="number">-1</span> &amp;&amp; (x &amp; <span class="built_in">bit</span> (i)) == <span class="number">0</span>) &#123;</span><br><span class="line">                x ^= v[i];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> x;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">rebuild</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">        u.<span class="built_in">clear</span> ();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = K - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">            <span class="keyword">if</span> (v[i] != <span class="number">-1</span>) &#123;</span><br><span class="line">                u.<span class="built_in">pb</span> (i);</span><br><span class="line">            &#125; </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">find</span> <span class="params">(<span class="type">int</span> k)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 記得 find 之前先 rebuild 來初始化 u</span></span><br><span class="line">        <span class="type">int</span> sz = u.<span class="built_in">size</span> (); </span><br><span class="line">        <span class="keyword">if</span> (sz != n) k--; <span class="comment">// 可以湊出 0，要扣掉 0 的那位</span></span><br><span class="line">        <span class="keyword">if</span> (k &gt;= <span class="built_in">bit</span> (sz)) <span class="keyword">return</span> <span class="number">-1</span>; </span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> cnt = sz - <span class="number">1</span>, ret = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">auto</span> i : u) &#123;</span><br><span class="line">            <span class="keyword">if</span> (k &amp; <span class="built_in">bit</span> (cnt)) &#123;</span><br><span class="line">                ret ^= v[i];</span><br><span class="line">            &#125; </span><br><span class="line">            cnt--;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ret;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

    </div>
</div>
<h3 id="類似題-1"><a href="#類似題-1" class="headerlink" title="類似題"></a>類似題</h3><div class="note default no-icon">
            <ul><li>給 $a_1,…,a_n$ 和 $x$，問 $x$ 是第幾小的</li></ul>
          </div>
<ul>
<li>看他哪個 $\texttt{bit}$ 有選，對應出來有選沒選的二進位就是他的 $\texttt{rank}$</li>
</ul>
<h2 id="Maximum-Xor-of-two-elements"><a href="#Maximum-Xor-of-two-elements" class="headerlink" title="Maximum Xor of two elements"></a>Maximum Xor of two elements</h2><h3 id="經典題"><a href="#經典題" class="headerlink" title="經典題"></a>經典題</h3><div class="note default no-icon">
            <h3 id="LeetCode-Maximum-XOR-of-Two-Numbers-in-an-Array"><a href="#LeetCode-Maximum-XOR-of-Two-Numbers-in-an-Array" class="headerlink" title="LeetCode Maximum XOR of Two Numbers in an Array"></a><a href="https://leetcode.com/problems/maximum-xor-of-two-numbers-in-an-array/">LeetCode Maximum XOR of Two Numbers in an Array</a></h3><p>給 $a_1\sim a_n$，問兩個元素 $\texttt{XOR}$ 起來，最大是多少</p><ul><li>$O(n)$</li></ul>
          </div>
<ul>
<li>$\texttt{Trie}$</li>
</ul>
<h3 id="延伸題"><a href="#延伸題" class="headerlink" title="延伸題"></a>延伸題</h3><div class="note default no-icon">
            <h3 id="CSES-Maximum-Xor-Subarray"><a href="#CSES-Maximum-Xor-Subarray" class="headerlink" title="CSES Maximum Xor Subarray"></a><a href="https://cses.fi/problemset/task/1655/">CSES Maximum Xor Subarray</a></h3><p>給 $a_1\sim a_n$，最大 $\texttt{XOR}$ 起來的 $\texttt{Subarray}$ 是多少</p><ul><li>$O(n)$</li></ul>
          </div>
<ul>
<li>$\texttt{prefix sum}$</li>
</ul>
<div class='spoiler collapsed'>
    <div class='spoiler-title'>
        full code
    </div>
    <div class='spoiler-content'>
        <figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> pii pair<span class="string">&lt;int, int&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> mk make_pair</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> F first</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> S second</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ALL(x) x.begin(), x.end()</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">using</span> PQ = priority_queue&lt;<span class="type">int</span>, vector&lt;<span class="type">int</span>&gt;, greater&lt;<span class="type">int</span>&gt;&gt;;</span><br><span class="line"> </span><br><span class="line"><span class="type">const</span> <span class="type">int</span> INF = <span class="number">2e18</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> maxn = <span class="number">3e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> M = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">node</span> &#123;</span><br><span class="line">    node *ch[<span class="number">2</span>];</span><br><span class="line"> </span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">con</span> <span class="params">(<span class="type">int</span> x)</span> </span>&#123;</span><br><span class="line">        vector&lt;<span class="type">int</span>&gt; res;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">30</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (x &amp; (<span class="number">1</span> &lt;&lt; i)) res.<span class="built_in">pb</span> (<span class="number">1</span>);</span><br><span class="line">            <span class="keyword">else</span> res.<span class="built_in">pb</span> (<span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">add</span> <span class="params">(<span class="type">int</span> x, node *rt)</span> </span>&#123;</span><br><span class="line">        vector&lt;<span class="type">int</span>&gt; res = <span class="built_in">con</span> (x);</span><br><span class="line">        <span class="type">int</span> n = res.<span class="built_in">size</span> ();</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = n - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">            <span class="keyword">if</span> (rt -&gt; ch[res[i]] == <span class="literal">nullptr</span>) rt -&gt; ch[res[i]] = <span class="keyword">new</span> <span class="built_in">node</span> ();</span><br><span class="line">            rt = rt -&gt; ch[res[i]];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">find</span> <span class="params">(<span class="type">int</span> x, node *rt)</span> </span>&#123;</span><br><span class="line">        vector&lt;<span class="type">int</span>&gt; res = <span class="built_in">con</span> (x);</span><br><span class="line">        <span class="type">int</span> n = res.<span class="built_in">size</span>();</span><br><span class="line"> </span><br><span class="line">        <span class="type">int</span> ret = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = n - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">            <span class="keyword">if</span> (rt -&gt; ch[res[i] ^ <span class="number">1</span>] == <span class="literal">nullptr</span>) rt = rt -&gt; ch[res[i]], ret += (res[i] &lt;&lt; i);</span><br><span class="line">            <span class="keyword">else</span> rt = rt -&gt; ch[res[i] ^ <span class="number">1</span>], ret += ((res[i] ^ <span class="number">1</span>) &lt;&lt; i);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ret;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"> </span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">int</span> a[maxn], pre[maxn];</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">init</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) cin &gt;&gt; a[i];</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">    node *rt = <span class="keyword">new</span> <span class="built_in">node</span> ();</span><br><span class="line"> </span><br><span class="line">    <span class="type">int</span> res = <span class="number">0</span>;</span><br><span class="line">    rt -&gt; <span class="built_in">add</span> (<span class="number">0</span>, rt);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        pre[i] = pre[i - <span class="number">1</span>] ^ a[i];</span><br><span class="line">        <span class="type">int</span> ret = rt -&gt; <span class="built_in">find</span> (pre[i], rt) ^ pre[i];</span><br><span class="line">        res = <span class="built_in">max</span> (res, ret);</span><br><span class="line">        rt -&gt; <span class="built_in">add</span> (pre[i], rt);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    cout &lt;&lt; res &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125; </span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">// ios::sync_with_stdio(0);</span></span><br><span class="line">    <span class="comment">// cin.tie(0);</span></span><br><span class="line">    <span class="type">int</span> t = <span class="number">1</span>;</span><br><span class="line">    <span class="comment">//cin &gt;&gt; t;</span></span><br><span class="line">    <span class="keyword">while</span> (t--) &#123;</span><br><span class="line">        <span class="built_in">init</span>();</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>

    </div>
</div>
<h3 id="變化題"><a href="#變化題" class="headerlink" title="變化題"></a>變化題</h3><div class="note default no-icon">
            <h3 id="K-th-Maximum-XOR-of-Two-Numbers-in-an-Array"><a href="#K-th-Maximum-XOR-of-Two-Numbers-in-an-Array" class="headerlink" title="K-th Maximum XOR of Two Numbers in an Array"></a>K-th Maximum XOR of Two Numbers in an Array</h3><p>給 $a_1\sim a_n$，問兩個元素 $\texttt{XOR}$ 起來，第 $k$ 大是多少</p><ul><li>$n=10^5$</li></ul>
          </div>
<ul>
<li>二分搜 $O(\log C)$</li>
<li>用 $\texttt{Trie}$ 檢查 $O(n\log C)$ <ul>
<li>對於每個 $a_i$ 找 $a_i \oplus a_j \le x$ 的 $a_j$ 有幾個</li>
<li>每次在 $\texttt{Trie}$ 上 $\texttt{find }O(\log C)$ (深度)</li>
<li>有 $n$ 個 $a_i$ 所以才是 $O(n\log C)$</li>
</ul>
</li>
<li>$\Rightarrow O(n\log^2 C)$</li>
</ul>
<div class="note default no-icon">
            <h3 id="CF-1055F-Tree-and-Xor"><a href="#CF-1055F-Tree-and-Xor" class="headerlink" title="CF 1055F Tree and Xor"></a><a href="https://codeforces.com/contest/1055/problem/F">CF 1055F Tree and Xor</a></h3><ul><li>給一顆樹，設 $f(u,v)$ 為 $u$ 到 $v$ 的邊權異或和</li><li>問對於所有的 $f(u,v)$ 第 $k$ 大是多少</li></ul>
          </div>
<ul>
<li>$\texttt{k-th Xor path problem}$</li>
<li>$f(u,v)=f(rt,u)\oplus f(rt,v)$</li>
<li>問題就轉成挑兩個 $\texttt{XOR}$ 起來第 $k$ 大</li>
</ul>
<div class="note default no-icon">
            <h3 id="USACO-2019-Dec-Gold-p1"><a href="#USACO-2019-Dec-Gold-p1" class="headerlink" title="USACO 2019 Dec. Gold p1"></a><a href="http://www.usaco.org/index.php?page=viewproblem2&amp;cpid=921">USACO 2019 Dec. Gold p1</a></h3><p>給一顆樹，賦予每個 Node $a_i$，$q$ 筆詢問</p><ul><li>$\text{modify}(u,val):$ 把 $a_u = val$</li><li>$\text{query}(u,v):$ 問把 $u \rightarrow v$ 的 path 上的$a_i \texttt{ XOR}$ 起來是多少</li></ul>
          </div>
<ul>
<li>相關的問題（不是Trie)</li>
<li>$f(u,v)=f(u,rt) \oplus f(v,rt)$</li>
<li>問題就轉成了 CSES path queries I</li>
<li>用 euler technique 解決</li>
</ul>
<h2 id="Atcoder-Xor"><a href="#Atcoder-Xor" class="headerlink" title="Atcoder Xor"></a>Atcoder Xor</h2><h3 id="XOR-2"><a href="#XOR-2" class="headerlink" title="XOR 2"></a><a href="https://atcoder.jp/contests/arc098/tasks/arc098_b">XOR 2</a></h3><ul>
<li>雙指針，前綴和</li>
</ul>
<h3 id="XOR-3"><a href="#XOR-3" class="headerlink" title="XOR 3"></a><a href="https://atcoder.jp/contests/abc141/tasks/abc141_f">XOR 3</a></h3><ul>
<li>令分成的兩堆 $\texttt{XOR}$ 和 $s_1,s_2$</li>
<li>若在二進位下第 $i$ 位是 $1$ 的個數是奇數<ul>
<li>奇 $=$ 奇 $+$ 偶</li>
<li>故 $s_1,s_2$ 其中一個的第 $i$ 位也一定是奇數</li>
<li>直接先把所有的 $a_i$ 的第 $i$ 位設為 $0$</li>
<li>答案直接加上奇數位數的總和</li>
</ul>
</li>
<li>偶數的部分發現 $s_1’\oplus s_2’=0$ (被刪掉奇數位數的異或和)<ul>
<li>因為每位都只剩下偶數個數，自然就是 $0$</li>
<li>$\Rightarrow s_1’=s_2’$</li>
<li>不管 $s_1’$ 選啥，$s_2’$ 的值也一定跟 $s_1’$ 相同</li>
</ul>
</li>
<li>最後只要在目前的 $a_1’\sim a_n’$ 做 $\texttt{Maximum Xor Subset}$ 即可</li>
</ul>
<div class='spoiler collapsed'>
    <div class='spoiler-title'>
        full code
    </div>
    <div class='spoiler-content'>
        <figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> pii pair<span class="string">&lt;int, int&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> mk make_pair</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> F first</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> S second</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ALL(x) x.begin(), x.end()</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> bit(i) (1LL &lt;&lt; i)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">using</span> PQ = priority_queue&lt;<span class="type">int</span>, vector&lt;<span class="type">int</span>&gt;, greater&lt;<span class="type">int</span>&gt;&gt;;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> INF = <span class="number">2e18</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> maxn = <span class="number">3e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> M = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> K = <span class="number">60</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line">vector&lt;<span class="type">int</span>&gt; a;</span><br><span class="line"><span class="type">int</span> cnt[maxn];</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">gauss</span> &#123;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; v;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">init</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">        v.<span class="built_in">resize</span> (K);</span><br><span class="line">        <span class="built_in">fill</span> (<span class="built_in">ALL</span>(v), <span class="number">-1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">upbit</span> <span class="params">(<span class="type">int</span> x)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> p = K;</span><br><span class="line">        <span class="keyword">while</span> ((x &amp; <span class="built_in">bit</span> (p)) == <span class="number">0</span>)  p--;</span><br><span class="line">        <span class="keyword">return</span> p;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">insert</span> <span class="params">(<span class="type">int</span> x)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = K - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">            <span class="keyword">if</span> ((x &amp; <span class="built_in">bit</span> (i)) &amp;&amp; v[i] != <span class="number">-1</span>) &#123;</span><br><span class="line">                x ^= v[i];</span><br><span class="line">                <span class="built_in">assert</span> (v[i] &amp; <span class="built_in">bit</span> (i));</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> ((x &amp; <span class="built_in">bit</span> (i)) &amp;&amp; v[i] == <span class="number">-1</span>) &#123;</span><br><span class="line">                v[i] = x;</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">query</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> x = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = K - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">            <span class="keyword">if</span> (v[i] != <span class="number">-1</span> &amp;&amp; (x &amp; <span class="built_in">bit</span> (i)) == <span class="number">0</span>) &#123;</span><br><span class="line">                x ^= v[i];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> x;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">init</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    a.<span class="built_in">clear</span> ();</span><br><span class="line">    a.<span class="built_in">resize</span> (n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; K; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (a[i] &amp; (<span class="number">1LL</span> &lt;&lt; j)) cnt[j]++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; K; i++) &#123;</span><br><span class="line">	<span class="keyword">if</span> (cnt[i] &amp; <span class="number">1</span>) &#123;</span><br><span class="line">	    res += (<span class="number">1LL</span> &lt;&lt; i);</span><br><span class="line">	    <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; n; ++j) &#123;</span><br><span class="line">	        <span class="keyword">if</span> (a[j] &amp; (<span class="number">1LL</span> &lt;&lt; i)) &#123;</span><br><span class="line">		    a[j] ^= (<span class="number">1LL</span> &lt;&lt; i);</span><br><span class="line">		&#125;</span><br><span class="line">	    &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    gauss G;</span><br><span class="line">    G.<span class="built_in">init</span> ();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> x : a) &#123;</span><br><span class="line">        G.<span class="built_in">insert</span>(x);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; res + <span class="number">2LL</span> * G.<span class="built_in">query</span> () &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">// ios::sync_with_stdio(0);</span></span><br><span class="line">    <span class="comment">// cin.tie(0);</span></span><br><span class="line">    <span class="type">int</span> t = <span class="number">1</span>;</span><br><span class="line">    <span class="comment">//cin &gt;&gt; t;</span></span><br><span class="line">    <span class="keyword">while</span> (t--) &#123;</span><br><span class="line">        <span class="built_in">init</span> ();</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>

    </div>
</div>
<h3 id="XOR-4"><a href="#XOR-4" class="headerlink" title="XOR 4"></a><a href="https://atcoder.jp/contests/abc147/tasks/abc147_d">XOR 4</a></h3><ul>
<li>對於每個 $\texttt{bit}$ 算前面出現幾個 $1,0$</li>
</ul>
<div class='spoiler collapsed'>
    <div class='spoiler-title'>
        full code
    </div>
    <div class='spoiler-content'>
        <figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> pii pair<span class="string">&lt;int, int&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> mk make_pair</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> F first</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> S second</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ALL(x) x.begin(), x.end()</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> bit(x) (1LL &lt;&lt; x)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">using</span> PQ = priority_queue&lt;<span class="type">int</span>, vector&lt;<span class="type">int</span>&gt;, greater&lt;<span class="type">int</span>&gt;&gt;;</span><br><span class="line"> </span><br><span class="line"><span class="type">const</span> <span class="type">int</span> INF = <span class="number">2e18</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> maxn = <span class="number">3e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> M = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> K = <span class="number">60</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">int</span> a[maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">init</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">get</span> <span class="params">(<span class="type">int</span> j)</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> x = <span class="number">0</span>, y = <span class="number">0</span>, ret = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (a[i] &amp; <span class="built_in">bit</span> (j)) &#123;</span><br><span class="line">            ret = (ret + (y * (<span class="built_in">bit</span> (j) % M)) % M) % M;</span><br><span class="line">            x++;</span><br><span class="line">        &#125; </span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            ret = (ret + (x * (<span class="built_in">bit</span> (j) % M)) % M) % M;</span><br><span class="line">            y++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; K; i++) &#123;</span><br><span class="line">        ans = (ans + <span class="built_in">get</span> (i)) % M;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125; </span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">// ios::sync_with_stdio(0);</span></span><br><span class="line">    <span class="comment">// cin.tie(0);</span></span><br><span class="line">    <span class="type">int</span> t = <span class="number">1</span>;</span><br><span class="line">    <span class="comment">//cin &gt;&gt; t;</span></span><br><span class="line">    <span class="keyword">while</span> (t--) &#123;</span><br><span class="line">        <span class="built_in">init</span>();</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>

    </div>
</div>
<h2 id="線性基大小"><a href="#線性基大小" class="headerlink" title="線性基大小"></a>線性基大小</h2><div class="note default no-icon">
            <ul><li>給定陣列 $a_1,…,a_n$ 問可以 $\texttt{XOR}$ 成多少種數字</li></ul>
          </div>
<ul>
<li>假設在消去的之後線性基大小只有 $r$，那答案就是 $2^{r}$</li>
</ul>
<h3 id="延伸"><a href="#延伸" class="headerlink" title="延伸"></a>延伸</h3><div class="note default no-icon">
            <ul><li>給一個陣列 $a_1,…,a_n$，問有多少個子集 $\texttt{XOR}$ 為 $0$</li></ul>
          </div>
<ul>
<li>假設在消去的之後線性基大小只有 $r$，那答案就是 $2^{n-r}$</li>
</ul>
<h3 id="變化"><a href="#變化" class="headerlink" title="變化"></a>變化</h3><div class="note default no-icon">
            <ul><li>給一個陣列 $a_1,…,a_n$，問有多少種 $\texttt{subset}$ 可以組成 $x$</li></ul>
          </div>
<ul>
<li>我們先判斷是否可以湊出 $x$</li>
<li>如果可以，我們可以透過 $\texttt{XOR}$ 一些 $0$ 也可以得到 $x$</li>
<li>假設在消去的之後線性基大小只有 $r$</li>
<li>所以答案就是 $2^{n-r}$ (也就是用那些 $0$ 來組合)</li>
</ul>
<h2 id="資料結構"><a href="#資料結構" class="headerlink" title="資料結構"></a>資料結構</h2><h3 id="例題1"><a href="#例題1" class="headerlink" title="例題1"></a>例題1</h3><div class="note default no-icon">
            <ul><li>給定一顆樹，問對於每個點，他以下的 $\texttt{subtree}$ 可以 $\texttt{XOR}$ 出多少種異或和</li></ul>
          </div>
<ul>
<li>把樹開成線段樹，每個節點維護一個線性基</li>
<li>每個線性基的大小最多是 $O(\log C)$<ul>
<li>因為最多只會控制全部的 $\texttt{bit}$</li>
</ul>
</li>
<li>每次 $\texttt{insert}$ 花 $O(\log C)$</li>
<li>$O(n\log^2 C)$</li>
</ul>
<h3 id="例題2"><a href="#例題2" class="headerlink" title="例題2"></a>例題2</h3><div class="note default no-icon">
            <p>給一個陣列 $a_1,…,a_n$，$q$ 筆以下詢問</p><ul><li>$\text{query}(l,r):a_l\sim a_r$ 的 $\texttt{Maximum Xor Subset}$ </li><li>每筆詢問複雜度 $O(\log^3 C)$ 回答</li></ul>
          </div>
<ul>
<li>線段樹維護</li>
<li>合併 $O(\log^2 C)$</li>
<li>$O(\log C)$ 層</li>
</ul>
<h3 id="例題3"><a href="#例題3" class="headerlink" title="例題3"></a>例題3</h3><div class="note default no-icon">
            <p>給一個陣列 $a_1,…,a_n$，$q$ 筆以下詢問</p><ul><li>$\text{query}(l,r):a_l\sim a_r$ 的 $\texttt{Maximum Xor Subset}$ </li><li>每筆詢問複雜度 $O(\log^2 C)$ 回答</li></ul>
          </div>
<p><img src="https://i.imgur.com/eodq4fJ.png =400x" alt=""></p>
<ul>
<li>建構 $\texttt{pre}$，$\texttt{suf}$，每層有 $n$ 個東西</li>
<li>每次再 $\texttt{insert}$ 一個東西花 $O(\log C)$</li>
<li>查詢相當於合併某個 $\texttt{suf}$ 跟每個 $\texttt{pre}$<ul>
<li>$O(\log^2 C)$</li>
</ul>
</li>
<li>$\begin{cases} \text{total build: } O(n\log^2 C) \\ \text{total query:}O(q\log^2 C)\end{cases}$</li>
</ul>
<h3 id="參考"><a href="#參考" class="headerlink" title="參考"></a>參考</h3><ul>
<li><a href="https://taodaling.github.io/blog/2020/12/25/%E7%BA%BF%E6%80%A7%E5%9F%BA/">https://taodaling.github.io/blog/2020/12/25/%E7%BA%BF%E6%80%A7%E5%9F%BA/</a></li>
</ul>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <tags>
        <tag>整理</tag>
        <tag>XOR</tag>
        <tag>線性基</tag>
      </tags>
  </entry>
  <entry>
    <title>vscode install</title>
    <url>/2023/03/14/vscode/</url>
    <content><![CDATA[<h2 id="links"><a href="#links" class="headerlink" title="links"></a>links</h2><ul>
<li><a href="https://code.visualstudio.com/docs/cpp/config-mingw" title="Title">vscode下載</a> </li>
<li>mingw64下載 (可自行挑選下載方式)<ul>
<li><a href="https://drive.google.com/file/d/1OVHKpgJB-Uqvbm7TLBlhwjtZc6Z0HCG8/view?usp=sharing" title="Title">路徑1 - google drive</a></li>
<li><a href="https://sourceforge.net/projects/mingw-w64/files/Toolchains%20targetting%20Win64/Personal%20Builds/mingw-builds/8.1.0/threads-win32/seh/x86_64-8.1.0-release-win32-seh-rt_v6-rev0.7z/download" title="Title">路徑2 - sorceforge</a></li>
</ul>
</li>
</ul>
<span id="more"></span>
<div class='spoiler collapsed'>
    <div class='spoiler-title'>
        影片
    </div>
    <div class='spoiler-content'>
        <iframe width="560" height="315" src="https://www.youtube.com/embed/8QdDlNOMCgA" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>
    </div>
</div>
<h2 id="windows-powershell-cmd"><a href="#windows-powershell-cmd" class="headerlink" title="windows powershell(cmd)"></a>windows powershell(cmd)</h2><ul>
<li><code>cd &lt;folder&gt;</code> 進入folder<ul>
<li>ex: <code>cd Desktop</code></li>
</ul>
</li>
<li><code>cd ..</code> 退到上一步的folder</li>
<li><code>mkdir &lt;name&gt;</code> 創建一個新的folder <ul>
<li>ex:  <code>mkdir projects</code> 創建一個名叫 <code>projects</code> 的folder </li>
</ul>
</li>
<li><code>ls</code> 展示目前路徑裡的檔案和資料夾</li>
</ul>
<h2 id="vscode"><a href="#vscode" class="headerlink" title="vscode"></a>vscode</h2><ul>
<li><code>ctrl+shift+p</code> vscode搜尋欄</li>
<li><code>g++ &lt;檔名&gt;.cpp -o &lt;名字&gt;</code> 編譯(compile) <code>&lt;檔名&gt;.cpp</code> 並且創建執行檔 <code>&lt;名字&gt;.exe</code><ul>
<li>ex: <code>g++ main.cpp -o main</code> 編譯 <code>main.cpp</code> 並且將其程式的執行弄到 <code>main.exe</code></li>
</ul>
</li>
<li><code>.\&lt;檔名&gt;.exe</code> 執行code<ul>
<li><code>.\main.exe</code></li>
</ul>
</li>
</ul>
<figure class="highlight c++"><figcaption><span>testcode</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta"># <span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    std::cout &lt;&lt; <span class="string">&quot;hello world!&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="常見問題"><a href="#常見問題" class="headerlink" title="常見問題"></a>常見問題</h2><blockquote>
<p>Q: 如果找不到 bin 資料夾 ?</p>
</blockquote>
<ul>
<li>試試 <a href="https://drive.google.com/file/d/1OVHKpgJB-Uqvbm7TLBlhwjtZc6Z0HCG8/view?usp=sharing" title="Title">google drive</a> 下載的方案   <ul>
<li>如果出現類似已下指令 可能代表你忘了 save</li>
</ul>
</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">c:/mingw/bin/../lib/gcc/mingw32/6.3.0/../../../libmingw32.a(main.o):(.text.startup+0xa0): undefined reference to `WinMain@16&#x27;</span><br><span class="line">collect2.exe: error: ld returned 1 exit status</span><br></pre></td></tr></table></figure>
<blockquote>
<p>Q: 如果有 save 解果出現以下指令 ?</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">C:/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/lib/../lib/libmingw32.a(lib64_libmingw32_a-crt0_c.o):crt0_c.c:(.text.startup+0x2e): undefined reference to `WinMain&#x27;</span><br><span class="line">collect2.exe: error: ld returned 1 exit status</span><br></pre></td></tr></table></figure>
</blockquote>
<ul>
<li>代表你可能忘記打 <code>int main ()</code>  或是打錯</li>
</ul>
<blockquote>
<p>Q: terminal那邊要 run code 有更簡潔的方式嗎 ?</p>
</blockquote>
<ul>
<li>直接 <code>ctrl+shift+B</code> 就可以了 (編譯+生exe)</li>
</ul>
<blockquote>
<p>Q: 我用 <code>ctrl + F5</code> 偵錯他會顯示 <code>launch.json</code> 不存在 ? </p>
</blockquote>
<ul>
<li>這是正常的，因為這部影片並沒有提到 debugger 的部分</li>
<li>debugger 詳細部分可上 <a href="https://code.visualstudio.com/docs/editor/debugging">這篇官網資料</a> 查看</li>
</ul>
<blockquote>
<p>Q: terminal 出現 當 <code>C_Cpp.intelliSenseEngine</code> 設為 <code>disabled</code> 時，無法執行 IntelliSense 的相關命令</p>
</blockquote>
<ul>
<li>可以參考<a href="https://blog.csdn.net/lxj362343/article/details/125711213">這篇博客</a></li>
</ul>
<blockquote>
<p>Q: 檔案執行時一直跳出 launch json 要怎麼辦 ?</p>
</blockquote>
<ul>
<li>看起來你是啟動到 debug 模式了</li>
<li><a href="https://code.visualstudio.com/docs/cpp/launch-json-reference">詳細資料</a></li>
</ul>
<blockquote>
<p>Q: 執行指令時，出現以下錯誤</p>
<p><img src="https://i.stack.imgur.com/KrGg0.png" alt="error message"></p>
</blockquote>
<ul>
<li>卸載 <code>clangd</code> 這個 extension</li>
<li>點擊左上角的 <code>File → Preferences → Settings</code></li>
<li>在搜尋欄打上 <code>Intellisense engine</code></li>
<li>找到 <code>C_Cpp: IntelliSense Engine</code> 將其設置為 <code>Default</code> (如下圖)</li>
</ul>
<p><img src="https://i.stack.imgur.com/AJnT2.png" alt="將其設置為 default " style="zoom:33%;" /></p>
<blockquote>
<p>在影片中 <a href="https://www.youtube.com/watch?v=8QdDlNOMCgA&amp;t=289s">4:49</a> 秒時，它找不到 <code>C/C++: Edit Configurations (UI)</code> ?</p>
</blockquote>
<ul>
<li>需要先下載好 C/C++ 的 extension (影片中的 <a href="https://www.youtube.com/watch?v=8QdDlNOMCgA&amp;t=267s">4:27</a>) ，才有辦法找到</li>
<li><a href="https://stackoverflow.com/questions/62036568/dont-have-c-cpp-properties-json-file-in-vscode">參考資料</a></li>
</ul>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <tags>
        <tag>教學</tag>
      </tags>
  </entry>
  <entry>
    <title>隔離採礦</title>
    <url>/2023/03/28/%E9%9A%94%E9%9B%A2%E6%8E%A1%E7%A4%A6/</url>
    <content><![CDATA[<h2 id="題意"><a href="#題意" class="headerlink" title="題意"></a>題意</h2><blockquote>
<p>題目 : <a href="https://judge.tcirc.tw/ShowProblem?problemid=d088">https://judge.tcirc.tw/ShowProblem?problemid=d088</a></p>
</blockquote>
<h2 id="想法"><a href="#想法" class="headerlink" title="想法"></a>想法</h2><ul>
<li>$dp[i]=dp[j]+v[i]$<ul>
<li>$O(n^2)$</li>
</ul>
</li>
<li>維護單調 $\texttt{stack}$<ul>
<li>從底到 $\texttt{top}$ 看過去是 $\texttt{decreasing}$ (非嚴格)</li>
</ul>
</li>
<li>因為如果中間要隔一個比較高的勢必要被別人支配，也就不能出現在單調 $\texttt{stack}$ 的才能去取 $\texttt{max}$</li>
</ul>
<span id="more"></span>
<ul>
<li>$h[i]$ 要轉移須找第一個比 $h[i]$  還大的 $h[j]$ 能轉移的區間就是 $[1..j]$ 的 $\texttt{dp}$ 值，除了 $[1..j]$ 所形成的單調 $\texttt{stack}$ 中的 $\texttt{dp}$ 值<ul>
<li>因為如果在單調 $\texttt{stack}$ 內代表他支配著他左邊的區間，也就代表是只有左邊區間內的元素能轉移</li>
<li>存在單調 $\texttt{stack}$ 內也意味著右邊的 $h$ 都比自己小</li>
<li>代表無法跟右邊的元素中間隔一個峰</li>
<li>找第一個比 $h[i]$  還大的用另外一個單調 $\texttt{stack}$ 維護</li>
</ul>
</li>
<li>$O(n)$</li>
</ul>
<h2 id="CODE"><a href="#CODE" class="headerlink" title="CODE"></a>CODE</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> pii pair<span class="string">&lt;int, int&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> mk make_pair</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> F first</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> S second</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ALL(x) x.begin(), x.end()</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">using</span> PQ = priority_queue&lt;<span class="type">int</span>, vector&lt;<span class="type">int</span>&gt;, greater&lt;<span class="type">int</span>&gt;&gt;;</span><br><span class="line"> </span><br><span class="line"><span class="type">const</span> <span class="type">int</span> INF = <span class="number">2e18</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> maxn = <span class="number">1e6</span> + <span class="number">5</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> M = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">int</span> h[maxn], v[maxn], dp[maxn], dom[maxn];</span><br><span class="line"><span class="type">int</span> mx[maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">init</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) cin &gt;&gt; h[i];</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) cin &gt;&gt; v[i];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">    stack&lt;<span class="type">int</span>&gt; stk;</span><br><span class="line">    stack&lt;<span class="type">int</span>&gt; stk2;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        <span class="comment">// dom[i]: h[i] 支配的區間的 dp 值 max</span></span><br><span class="line">        <span class="comment">// mx[i]: 從 1..i 有被支配的 index 的 dp 值取 max</span></span><br><span class="line">        <span class="comment">// 不能支配跟 h[i] 一樣大的, 這樣會造成 h[j] 是 [j..i] 的最大值, 中間並沒有峰</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">while</span> (stk.<span class="built_in">size</span> () &amp;&amp; h[stk.<span class="built_in">top</span>()] &lt; h[i]) &#123;</span><br><span class="line">            <span class="comment">// 支配 stk.top</span></span><br><span class="line">            dom[i] = <span class="built_in">max</span> (&#123;dom[i], dom[stk.<span class="built_in">top</span>()], dp[stk.<span class="built_in">top</span>()]&#125;);</span><br><span class="line">            <span class="comment">// 記得也要 max 到 dp[stk.top()] 因為 dom[j] 不會包含 dp[j]</span></span><br><span class="line">            stk.<span class="built_in">pop</span> ();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 找上一個比 h[i] strictly greater 的</span></span><br><span class="line">        <span class="keyword">while</span> (stk2.<span class="built_in">size</span> () &amp;&amp; h[stk2.<span class="built_in">top</span>()] &lt;= h[i]) &#123;</span><br><span class="line">            stk2.<span class="built_in">pop</span> ();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (stk.<span class="built_in">empty</span> ()) &#123;</span><br><span class="line">            dp[i] = v[i];</span><br><span class="line">            mx[i] = dom[i];</span><br><span class="line">        &#125; </span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="type">int</span> ret = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">if</span> (stk2.<span class="built_in">size</span>()) ret = mx[stk2.<span class="built_in">top</span>()]; <span class="comment">// stk2.top: 第一個比 h[i] 大的</span></span><br><span class="line">            mx[i] = <span class="built_in">max</span> (mx[stk.<span class="built_in">top</span>()], dom[i]); <span class="comment">// 大於等於他的 + 他支配的</span></span><br><span class="line">            dp[i] = ret + v[i];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        stk.<span class="built_in">push</span> (i);</span><br><span class="line">        stk2.<span class="built_in">push</span> (i);</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; *<span class="built_in">max_element</span> (dp + <span class="number">1</span>, dp + n + <span class="number">1</span>) &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">// push stack </span></span><br><span class="line">    <span class="comment">// ios::sync_with_stdio(0);</span></span><br><span class="line">    <span class="comment">// cin.tie(0);</span></span><br><span class="line">    <span class="type">int</span> t = <span class="number">1</span>;</span><br><span class="line">    <span class="comment">//cin &gt;&gt; t;</span></span><br><span class="line">    <span class="keyword">while</span> (t--) &#123;</span><br><span class="line">        <span class="built_in">init</span>();</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <tags>
        <tag>題解</tag>
        <tag>單調對列</tag>
        <tag>dp</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo next 教學</title>
    <url>/2023/03/23/hexo%20next/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>這是「第 1 篇 : 架設博客」的教學，以下是全部教學篇的總覽</p>
<div class="note info no-icon">
            <h3 id="總覽"><a href="#總覽" class="headerlink" title=" 總覽"></a><i class="fa fa-bars"></i> 總覽</h3><ul><li><a href="/2023/03/23/hexo%20next/">第 1 篇 : 架設博客</a></li><li><a href="/2023/03/25/hexo%20next2/">第 2 篇 : 博客設定優化</a></li><li><a href="/2023/03/27/hexo%20next3/">第 3 篇 : 備份原始檔到 github</a></li></ul>
          </div>
<h2 id="下載軟體"><a href="#下載軟體" class="headerlink" title="下載軟體"></a>下載軟體</h2><blockquote>
<h3 id="Node-js"><a href="#Node-js" class="headerlink" title="Node.js"></a>Node.js</h3><p>下載位置：<a href="https://nodejs.org/zh-tw/download/">下載 | Node.js</a></p>
</blockquote>
<p><img src="https://i.imgur.com/ub2U0xs.png" alt="安裝介面" style="zoom:33%;" /></p>
<p>windows 用戶點<font color="#FC4E4E">紅色</font>圈起來的，mac 用戶點<font color="#00A2E8">藍色</font>圈起來的</p>
<p>下載好之後開起下載的檔案然後安裝，基本上只要一直點 next 就好了</p>
<blockquote>
<h3 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h3><p>下載位置：<a href="https://git-scm.com/downloads">Git - Downloads</a></p>
</blockquote>
<p><img src="https://i.imgur.com/v6LwRcv.png" style="zoom:33%;" /></p>
<p>windows 用戶點<font color="#FC4E4E">紅色</font>圈起來的 <code>Download for Windows</code></p>
<p>下載好之後開起下載的檔案然後安裝，基本上只要一直點 next 就好了</p>
<blockquote>
<h3 id="Vscode"><a href="#Vscode" class="headerlink" title="Vscode"></a>Vscode</h3><p>下載位置：<a href="https://code.visualstudio.com/download">Download Visual Studio Code</a></p>
</blockquote>
<p><img src="https://i.imgur.com/xToEIWN.png" style="zoom:33%;" /></p>
<p>直接下載就可以用了</p>
<p>windows 用戶點<font color="#FC4E4E">紅色</font>圈起來的，mac 用戶點<font color="#75F94D">綠色</font>圈起來的</p>
<blockquote>
<h3 id="文章編輯器-Typora"><a href="#文章編輯器-Typora" class="headerlink" title="文章編輯器 Typora"></a>文章編輯器 Typora</h3><p>下載位置：<a href="https://typora.io/#download">Typora — a markdown editor, markdown reader.</a></p>
</blockquote>
<p><img src="https://i.imgur.com/DW5u5sE.png" style="zoom:33%;" /></p>
<p>點<font color="#FC4E4E">紅色</font>圈起來的</p>
<p>這個軟體使用起來是免費的，所以不用擔心，如果之後看到以下畫面</p>
<p><img src="https://i.imgur.com/uZJS8rH.png" style="zoom:50%;" /></p>
<p>就點 <code>不是現在</code> 即可</p>
<h2 id="架設-hexo"><a href="#架設-hexo" class="headerlink" title="架設 hexo"></a>架設 hexo</h2><h3 id="建立博客根目錄"><a href="#建立博客根目錄" class="headerlink" title="建立博客根目錄"></a>建立博客根目錄</h3><h4 id="For-win11"><a href="#For-win11" class="headerlink" title="For win11"></a>For win11</h4><p>我們先建立一個名為 <code>hexo</code> 的資料夾(在哪裡建立都 ok)</p>
<p>接著對你建立的名為 <code>hexo</code> 的資料<strong>左鍵點一下</strong> $\rightarrow$ 接著再點擊右鍵 $\rightarrow$ 點擊在終端中開啟</p>
<blockquote>
<p>注意: 如果沒有先用左鍵點<strong>一下</strong>資料夾他是不會顯示「在終端中開啟」這個選項的</p>
</blockquote>
<p><img src="https://i.imgur.com/fitXCVt.png" alt = "點擊「在終端中開啟」" style="zoom:50%;" /></p>
<h4 id="For-else"><a href="#For-else" class="headerlink" title="For else"></a>For else</h4><p>在搜尋攔搜尋 cmd，按 enter 開啟，接著就按照你 <code>hexo</code> 資料夾的位置去 <code>cd &lt;folder&gt;</code> ，直到進到 <code>hexo</code> 資料夾內</p>
<p>例如我目前在 <code>C:\Users\yozen</code> </p>
<p>而我有安裝 onedrive 所以我的 hexo 路徑在 <code>C:\Users\yozen\Onedrive\桌面\projects\hexo</code> </p>
<p>以下就是我需要 cd 的路徑</p>
<p><img src="https://i.imgur.com/aq7kdxd.png" alt="範例" style="zoom: 67%;" /></p>
<h3 id="檢查"><a href="#檢查" class="headerlink" title="檢查"></a>檢查</h3><p>在終端機(以下都稱作 <code>cmd</code> 內) 輸入以下指令</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">node <span class="literal">-v</span></span><br><span class="line">npm <span class="literal">-v</span></span><br></pre></td></tr></table></figure>
<ul>
<li><code>node -v</code> 查詢安裝的 node 版本</li>
<li><code>npm -v</code> 查詢安裝的 npm 版本</li>
<li>正確的話系統就會回報版本給你</li>
</ul>
<blockquote>
<p>記得要先按裝好上面的軟體下載再來檢查，不然一邊下載一邊開著 cmd 是不會成功的</p>
</blockquote>
<p>如果都沒有出現 <font color="#FC4E4E">error(紅字)</font> 代表 ok</p>
<h3 id="利用-npm-下載-Hexo"><a href="#利用-npm-下載-Hexo" class="headerlink" title="利用 npm 下載 Hexo"></a>利用 npm 下載 Hexo</h3><ul>
<li><p>接著繼續在 <code>cmd</code> 內輸入以下指令</p>
</li>
<li><p>在執行完 <code>npm install hexo-cli -g</code> 後，看到 <code>cmd</code> 顯示 <code>INFO Start blogging with Hexo!</code>，代表有安裝到</p>
</li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">npm install hexo<span class="literal">-cli</span> <span class="literal">-g</span></span><br><span class="line">hexo init</span><br></pre></td></tr></table></figure>
<div class="note danger no-icon">
            <h4 id="如果出現以下警告"><a href="#如果出現以下警告" class="headerlink" title="如果出現以下警告"></a>如果出現以下警告</h4><p><img src="https://i.imgur.com/yi9JAA0.png" alt=""></p><hr><p>在搜尋欄搜尋 <code>Windows PowerShell</code>，對他點擊右鍵</p><p>$\rightarrow$ 點擊以<strong>「系統管理員身分執行」</strong>，如下圖</p><p><img src="https://i.imgur.com/UGSTxmq.png" style="zoom:50%;" /></p><p>開啟後打上以下指令<br><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Set-ExecutionPolicy</span> RemoteSigned</span><br></pre></td></tr></table></figure></p><p><img src="https://firebasestorage.googleapis.com/v0/b/welcomewebworld-4097b.appspot.com/o/blogImg%2Fother%2F2020-05-10_22-38-18.png?alt=media&amp;token=68a6e168-1ee6-4864-a4d3-73d576e74e24" alt=""></p><p>按下(輸入 A) [A] 就可以了</p><p>你就可以再回去試試看執行 <code>npm</code>  指令了</p>
          </div>
<h3 id="在自己的電腦上啟動-Hexo"><a href="#在自己的電腦上啟動-Hexo" class="headerlink" title="在自己的電腦上啟動 Hexo"></a>在自己的電腦上啟動 Hexo</h3><p>輸入以下指令來啟動 Hexo</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure>
<ul>
<li>執行指令後，若有看到這行字的話，就表示我們安裝成功了</li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">INFO  Hexo is running at http://localhost:<span class="number">4000</span> . Press Ctrl+C to stop</span><br></pre></td></tr></table></figure>
<ul>
<li>之後我們打開瀏覽器 (Chrome, Firefox)，在網址列輸入 <a href="http://localhost:4000/">http://localhost:4000/</a> 就可以看到 Hexo 的畫面了 (如下圖)。</li>
</ul>
<p><img src="https://ycjhuo.gitlab.io/assets/img/20-01.8ceaf1f7.png" style="zoom: 50%;" /></p>
<h2 id="建立文章"><a href="#建立文章" class="headerlink" title="建立文章"></a>建立文章</h2><ul>
<li>要建立新文章的話，在這個資料夾底下 <code>hexo\source\posts</code> 建立 <code>檔名.md</code> (檔名自訂) 即可</li>
<li>你會看到內建有一篇 <code>hello world.md</code> 那個可以刪掉，或者你直接用他去改都 ok</li>
<li>至於裡面的內容，一定要先至少打上</li>
</ul>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> </span><br><span class="line"><span class="attr">date:</span> </span><br><span class="line"><span class="attr">description:</span> </span><br><span class="line"><span class="attr">tags:</span> </span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="meta"></span></span><br></pre></td></tr></table></figure>
<ul>
<li>title : 文章的標題</li>
<li>date : 發布文章的時間 (可以留空)</li>
<li>description: 在博客主頁面會顯示的簡述 (可留空)</li>
<li>tags : 標籤</li>
</ul>
<p>在下面的部分 (第 6 行之後) 就可以開始撰寫文章的正文了，以下提供一個範例<br><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">My</span> <span class="string">first</span> <span class="string">blog</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2020-09-17 21:18:00</span></span><br><span class="line"><span class="attr">description:</span> <span class="string">whats</span> <span class="string">up</span> <span class="string">guys</span></span><br><span class="line"><span class="attr">tags:</span> </span><br><span class="line"><span class="bullet">-</span> [<span class="string">blog</span>]	</span><br><span class="line"><span class="bullet">-</span> [<span class="string">test</span>]</span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="string">This</span> <span class="string">is</span> <span class="string">my</span> <span class="string">first</span> <span class="string">post.</span></span><br></pre></td></tr></table></figure></p>
<ul>
<li>寫好後，重新整理 <a href="http://localhost:4000/">http://localhost:4000/</a> 即可看到變化</li>
</ul>
<h2 id="加上-NexT-主題"><a href="#加上-NexT-主題" class="headerlink" title="加上 NexT 主題"></a>加上 NexT 主題</h2><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/theme<span class="literal">-next</span>/hexo<span class="literal">-theme-next</span> themes/next</span><br></pre></td></tr></table></figure>
<p><img src="https://i.imgur.com/zaU56V9.png" style="zoom:60%;" /></p>
<p>再來到 <code>hexo\_config.yml</code>  (這裡的 <code>hexo</code> 是指網站一開始的資料夾)</p>
<p>可以用 vscode 來開啟檔案 </p>
<p>下載完後在 vscode 用 <code>ctrl + F</code>  搜尋  <code># Extensions</code>，並進行以下設置：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Extensions</span></span><br><span class="line"><span class="comment">## Plugins: https://hexo.io/plugins/</span></span><br><span class="line"><span class="comment">## Themes: https://hexo.io/themes/</span></span><br><span class="line"><span class="attr">theme:</span> <span class="string">next</span> </span><br></pre></td></tr></table></figure>
<p>改 <code>theme: next</code></p>
<p>再來我們在打上 </p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure>
<p>再去  <a href="http://localhost:4000/">http://localhost:4000/</a> 就可以看到變化了，如果要停止網站在 <code>cmd</code> 按 <code>ctrl+c</code> 即可</p>
<p>之後每次開啟本機端的博客都是先 <code>hexo clean</code> 再 <code>hexo s</code> 就可以啟動了</p>
<p><img src="https://img.guiblogs.com/hexo30-5/demo-next.jpg" alt="Next 佈景主題樣式" style="zoom: 50%;" /></p>
<h2 id="網站資訊設定"><a href="#網站資訊設定" class="headerlink" title="網站資訊設定"></a>網站資訊設定</h2><p>到 <code>hexo\config_yml</code> 找到以下代碼 :</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Site</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">Hexo</span> </span><br><span class="line"><span class="attr">subtitle:</span> <span class="string">&#x27;&#x27;</span> </span><br><span class="line"><span class="attr">description:</span> <span class="string">&#x27;&#x27;</span> </span><br><span class="line"><span class="attr">keywords:</span> </span><br><span class="line"><span class="attr">author:</span> <span class="string">John</span> <span class="string">Doe</span> </span><br><span class="line"><span class="attr">language:</span> <span class="string">en</span> </span><br><span class="line"><span class="attr">timezone:</span> <span class="string">&#x27;&#x27;</span> </span><br></pre></td></tr></table></figure>
<ul>
<li>title : 你的部落格標題</li>
<li>subtitle : 你的部落格副標題</li>
<li>description : 部落格簡介</li>
<li>keywords :  網站關鍵字，多個關鍵字用逗號隔開<ul>
<li>例如 <code>keywords : &#39;關鍵字1&#39;, &#39;關鍵字2&#39;</code></li>
</ul>
</li>
<li>author : 作者名字</li>
<li>language : 語言，繁體中文請改成 <code>language: zh-TW</code></li>
<li>timezone : 使用系統時間即可</li>
</ul>
<p>記得更改完後要 <code>hexo clean</code>, <code>hexo s</code> 才能看到更動</p>
<h2 id="將頁面上傳到-github-io"><a href="#將頁面上傳到-github-io" class="headerlink" title="將頁面上傳到 github.io"></a>將頁面上傳到 github.io</h2><h3 id="新增儲存庫"><a href="#新增儲存庫" class="headerlink" title="新增儲存庫"></a>新增儲存庫</h3><p>如果你本身已經有 Github 帳號或是剛辦好的，那就可以新增儲存庫了。首先來到已經為登入狀態的 Github 任一頁面，右上角會有個「+」按鈕，按下去後會出現下拉式選單，點擊第一個「New repository」。</p>
<p><img src="https://i.imgur.com/iuCXGcf.png" alt="點擊新增儲存庫"></p>
<p>此時請在你的 Reponsitory name 輸入「你的 Github 帳號.github.io」</p>
<p>例如我就是 <code>yozen0405.github.io</code></p>
<p><img src="https://i.imgur.com/gJDSfqc.png" alt="填寫網址"></p>
<p>填寫完成往下滑按下「Create repository」後，如果看到以下畫面就代表成功囉！此時，右上角是否有看到一個 HTTPS 的網址？請將它複製起來，待會會用到。</p>
<p><img src="https://i.imgur.com/MXgtC5S.png" alt="儲存庫建立成功"></p>
<h3 id="設定-Hexo-連結儲存庫"><a href="#設定-Hexo-連結儲存庫" class="headerlink" title="設定 Hexo 連結儲存庫"></a>設定 Hexo 連結儲存庫</h3><p>部署前要先設定 Hexo 的 <code>_config.yml</code> 檔案中連接到 Github 儲存庫的相關設定，首先要找到 <code># Deployment</code> 這段（基本上預設會在檔案最下面）：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/one-command-deployment</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span> <span class="comment"># 使用 Git 部署</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">https://github.com/Github帳號/Github帳號.github.io.git</span> <span class="comment"># 你的儲存庫 clone</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">gh-pages</span> <span class="comment"># 儲存庫分支</span></span><br><span class="line">  <span class="attr">message:</span> <span class="string">&quot;First Commit&quot;</span> <span class="comment"># Commit 訊息</span></span><br></pre></td></tr></table></figure>
<ul>
<li>type：部署類型</li>
<li>repo：儲存庫 clone (就是剛剛要你複製的那串，貼上去)</li>
<li>branch：儲存庫分支 </li>
<li>message：Commit 訊息</li>
</ul>
<p>這是我的設定，可以參考</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/one-command-deployment</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span> <span class="comment"># 使用 Git 部署</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">https://github.com/yozen0405/yozen0405.github.io.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">gh-pages</span> <span class="comment"># 儲存庫分支</span></span><br><span class="line">  <span class="attr">message:</span> <span class="string">&quot;First Commit&quot;</span> <span class="comment"># Commit 訊息</span></span><br></pre></td></tr></table></figure>
<ul>
<li><p>預設可能只有 type 而已，然而<strong>必須加上 repo、branch 等資訊才能進行部署</strong>（畢竟要設定部署的儲存庫嘛），message 不是必要的，不過我建議還是加，這樣整體在看的時候比較能夠一目了然每一次的部署是為了什麼而更新</p>
</li>
<li><p>再來就是 <strong>冒號後必須空一個空白在接設定值！</strong></p>
</li>
</ul>
<h3 id="上傳到-github"><a href="#上傳到-github" class="headerlink" title="上傳到 github"></a>上傳到 github</h3><p>在 <code>hexo</code> 資料夾用終端機開啟 (<code>cmd</code>)</p>
<p>輸入以下指令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br></pre></td></tr></table></figure>
<p>部署 Hexo 必須要安裝 <code>Hexo-deployer-git Git</code> 部署套件，因此需要執行以下指令安裝：</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">npm install hexo<span class="literal">-deployer-git</span> <span class="literal">--save</span></span><br></pre></td></tr></table></figure>
<p>再來就要執行 <code>hexo d</code> Hexo 的部署指令，就會開始將我們前面產生的靜態網頁部署到 Github Pages </p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">hexo d </span><br></pre></td></tr></table></figure>
<div class="note danger no-icon">
            <h4 id="如果顯示一大堆警告"><a href="#如果顯示一大堆警告" class="headerlink" title="如果顯示一大堆警告"></a>如果顯示一大堆警告</h4><p>在 <code>cmd</code> 輸入以下指令</p><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">git config <span class="literal">--global</span> user.name github_user_name</span><br><span class="line">git config <span class="literal">--global</span> user.email github_user_email</span><br></pre></td></tr></table></figure><p>其中 <code>github_user_name</code> 與 <code>github_user_email</code> 需替代成你 github 的名稱與榜定的 email</p><p>例如我就是</p><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">git config <span class="literal">--global</span> user.name yozen0405</span><br><span class="line">git config <span class="literal">--global</span> user.email yozen0405@gmail.com</span><br></pre></td></tr></table></figure>
          </div>
<p>如果執行後如圖這樣，恭喜你成功部署上去啦！打上 <code>https://你的github名字/你的github名字.github.io</code> 即可看到</p>
<p><img src="https://i.imgur.com/OSjiRTi.png" alt="Hexo 檔案成功部署到 Github" style="zoom:50%;" /></p>
<h3 id="公開部落格頁面"><a href="#公開部落格頁面" class="headerlink" title="公開部落格頁面"></a>公開部落格頁面</h3><p><img src="https://i.imgur.com/znpEkeJ.png" style="zoom:33%;" /></p>
<p>點擊 <code>Settings</code></p>
<p><img src="https://i.imgur.com/Z0B2kFS.png" style="zoom:33%;" /></p>
<p>點擊 <code>Pages</code></p>
<p><img src="https://i.imgur.com/Jo7fktP.png" style="zoom:33%;" /></p>
<p>點擊紅色框起來的部分就可以看到妳的網站了</p>
<div class="note danger no-icon">
            <h4 id="怎麼沒有顯示紅色框起來的部分"><a href="#怎麼沒有顯示紅色框起來的部分" class="headerlink" title="怎麼沒有顯示紅色框起來的部分 ?"></a>怎麼沒有顯示紅色框起來的部分 ?</h4><p>因為你目前的博客還在部署中，要再等一段時間才可</p><p>以下圖片框起來的地方可以看到目前部署的狀態，若是<font color="EF9B0F">黃色</font>代表部署中，<font color="green">綠色</font>代表已完成部署</p><p><img src="https://i.imgur.com/Rslfrvw.png" alt=""></p>
          </div>
<div class="note info">
            <p>之後每次要從本地端將你的資料丟到 github.io 上就直接 <code>hexo clean</code>, <code>hexo d</code> 即可</p>
          </div>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <tags>
        <tag>教學</tag>
        <tag>hexo next</tag>
        <tag>github</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo next 備份原始檔到 github</title>
    <url>/2023/03/27/hexo%20next3/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>這是「第 3 篇 : 備份原始檔到 github」的教學，讓你可以在不同電腦都可以編輯，以下是全部教學篇的總覽</p>
<div class="note info no-icon">
            <h3 id="總覽"><a href="#總覽" class="headerlink" title=" 總覽"></a><i class="fa fa-bars"></i> 總覽</h3><ul><li><a href="/2023/03/23/hexo%20next/">第 1 篇 : 架設博客</a></li><li><a href="/2023/03/25/hexo%20next2/">第 2 篇 : 博客設定優化</a></li><li><a href="/2023/03/27/hexo%20next3/">第 3 篇 : 備份原始檔到 github</a></li></ul>
          </div>
<h2 id="備份到-github"><a href="#備份到-github" class="headerlink" title="備份到 github"></a>備份到 github</h2><p>我們先進入到你的博客根目錄 (例如我的是名為 <code>hexo</code> 的資料夾)</p>
<p>到這個根目錄開啟 <code>cmd</code></p>
<p><img src="https://i.imgur.com/oBbc0ej.png" alt = "在 hexo 開啟 cmd" style="zoom:73%;" /></p>
<p>打上以下指令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git init</span><br></pre></td></tr></table></figure>
<p>接著去你的 github.io，按下 <code>Code</code> 這個按鈕，然後按複製</p>
<p><img src="https://i.imgur.com/PFy0FYG.png" alt="按下 Code 這個按鈕，然後按複製" style="zoom:50%;" /></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git remote add origin 你剛剛複製的把它覆蓋在這裡</span><br></pre></td></tr></table></figure>
<p>例如我的就是 </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git remote add origin https://github.com/yozen0405/yozen0405.github.io.git</span><br></pre></td></tr></table></figure>
<p>再來繼續在 cmd 打上以下指令，會顯示很多 warnings，是正常的，不用理他</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git add .</span><br></pre></td></tr></table></figure>
<p>然後再打上</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git commit -m &#x27;自訂訊息&#x27;</span><br></pre></td></tr></table></figure>
<p>「自訂訊息」的部分可以自己取，代表的是現在你目前是第幾個 update，或是第幾個 version 等等</p>
<p>例如我們是第一次傳到 github 所以我就把它叫做</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git commit -m &#x27;Initial commit&#x27;</span><br></pre></td></tr></table></figure>
<p>然後再打上</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure>
<p>然後你就去你的 github.io 的 github file 介面點擊 master (如圖)</p>
<p><img src="https://i.imgur.com/FT5GBzb.png" alt="點擊左上角的 gh-pages 再點 master"></p>
<p>就可以看到你 clone 的 file 了</p>
<h2 id="從-github-拉到本地端"><a href="#從-github-拉到本地端" class="headerlink" title="從 github 拉到本地端"></a>從 github 拉到本地端</h2><h3 id="已有套件"><a href="#已有套件" class="headerlink" title="已有套件"></a>已有套件</h3><p>如果在電腦上已經寫過博客，那麼可以在已有的工作目錄下同步之前寫的博客<br>在你博客根目錄 (我的根目錄叫 <code>hexo</code> 的資料夾)下開啟 cmd，輸入以下指令</p>
<blockquote>
<p>記得如果你有裝什麼新的插件而這台電腦沒有的話要再安裝一下</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git pull</span><br></pre></td></tr></table></figure>
<div class="note info">
            <p>因為你已有套件，所以直接跳到<a href="/2023/03/27/hexo%20next3/#成果">成果這裡</a></p>
          </div>
<h3 id="沒有套件"><a href="#沒有套件" class="headerlink" title="沒有套件"></a>沒有套件</h3><h4 id="clone-到本地端"><a href="#clone-到本地端" class="headerlink" title="clone 到本地端"></a>clone 到本地端</h4><p>去你的 github.io 的 github file 頁面，按下 <code>Code</code> 這個按鈕，然後按複製</p>
<p><img src="https://i.imgur.com/PFy0FYG.png" alt="按下 Code 這個按鈕，然後按複製" style="zoom:50%;" /></p>
<blockquote>
<p>如果你是新電腦，那也還需要重新下載我<a href="/2023/03/23/hexo%20next/">第一篇</a>教學所提到的軟體，git 也要重新登入</p>
</blockquote>
<p>開一個新的資料夾，名字自取，然後在這個資料夾開啟 cmd 輸入以下指令 </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git clone 你剛剛複製的把它覆蓋在這裡</span><br></pre></td></tr></table></figure>
<p>例如我的就是</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/yozen0405/yozen0405.github.io.git</span><br></pre></td></tr></table></figure>
<p>然後你會看到裡面出現了一個「你的名字.github.io」的資料夾，我們要輸入以下指令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd 你的名字.github.io</span><br><span class="line">git checkout master </span><br></pre></td></tr></table></figure>
<p>切換好後，如果檔案由原先的各個被產生的靜態網頁變成像是過去在本機設定 Hexo 時的那些檔案，就代表切換成功囉！</p>
<h4 id="將套件與佈景安裝回來"><a href="#將套件與佈景安裝回來" class="headerlink" title="將套件與佈景安裝回來"></a>將套件與佈景安裝回來</h4><p>node_modules 目錄放置的是我們平常安裝的套件，因為備份時沒有備份到它，此時我們要重新安裝回來。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install</span><br></pre></td></tr></table></figure>
<p>執行完指令後，開啟根目錄下的 <code>package.json</code> 檔案，紀錄我們過去安裝的一些套件，也請將這些套件安裝回來。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git install 套件名稱 --save</span><br></pre></td></tr></table></figure>
<p>重新將 Next 主題下載回來：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/theme-next/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure>
<h3 id="成果"><a href="#成果" class="headerlink" title="成果"></a>成果</h3><p>在你博客根目錄 (我的根目錄叫 <code>hexo</code> 的資料夾)下開啟 cmd，輸入以下指令</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure>
<p>就可以看看是否有還原成功囉！不過一些設定可能還是要再做一下，並且檢查是否還有一些地方需要進行修正。</p>
<link rel="stylesheet" href="/css/spoiler.css" type="text/css"><script src="/js/spoiler.js" type="text/javascript" async></script>]]></content>
      <tags>
        <tag>教學</tag>
        <tag>hexo next</tag>
        <tag>github</tag>
      </tags>
  </entry>
</search>
